{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject25() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery searchpost($bid:Int!, $snum:Int!, $tnum:Int!, $text:String!){  \\n  searchPost(boardId:$bid, skipNum:$snum, takeNum:$tnum, text:$text){\\n    id\\n    title\\n    text \\n    UserId\\n    createdAt\\n    Comment{\\n      id\\n      text\\n      createdAt\\n      UserId\\n    }\\n    User{\\n      name\\n    }\\n  }\\n   \\n}\\n\\n\\n\\n\"]);\n\n  _templateObject25 = function _templateObject25() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject24() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query{\\n    getStartDate{\\n      startDate\\n    }\\n  }\\n\"]);\n\n  _templateObject24 = function _templateObject24() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject23() {\n  var data = _taggedTemplateLiteralLoose([\" \\nquery {\\n  seeAllBoard{\\n    id\\n    type\\n    name\\n  }\\n}\\n\\n\\n\"]);\n\n  _templateObject23 = function _templateObject23() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject22() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery commentload($pid:Int!, $snum:Int!, $tnum:Int!){\\n  loadComment(postId:$pid , skipNum:$snum, takeNum:$tnum){\\n    text\\n    id\\n    UserId\\n    createdAt\\n  }\\n}\\n\"]);\n\n  _templateObject22 = function _templateObject22() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject21() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmutation deletecomment($cid : Int!){\\n    deleteComment(CommentId:$cid){\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject21 = function _templateObject21() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject20() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmutation commentcreate($pid:Int!, $text:String!){\\n    createComment(PostId:$pid ,text:$text){\\n      id\\n    }\\n    \\n  }\\n\"]);\n\n  _templateObject20 = function _templateObject20() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject19() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery postload($bid: Int!, $snum: Int!, $tnum:Int!){\\n    loadPost(boardId:$bid, skipNum:$snum, takeNum:$tnum){\\n      id\\n      title\\n      text \\n      UserId\\n      createdAt\\n      Comment{\\n        id\\n        text\\n        createdAt\\n        UserId\\n      }\\n      User{\\n        name\\n      }\\n  }\\n}\\n\"]);\n\n  _templateObject19 = function _templateObject19() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query searchLecture($text: String){\\n        searchLecture(text: $text){\\n            id\\n            name\\n            code\\n            division\\n            subdivision\\n            professer\\n            system\\n            semester\\n            room\\n            classes{\\n                VOD\\n                startTime\\n                endTime\\n                week\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query{\\n        seeAllLecture{\\n            id\\n            name\\n            code\\n            division\\n            subdivision\\n            professer\\n            system\\n            semester\\n            room\\n        }\\n    }\\n\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    mutation toggleLecture($LectureId: Int!){\\n        toggleLecture(LectureId: $LectureId){\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    mutation createAccount($email: String!, $password: String!, $name: String!, $grade: Int, $number: String!){\\n        createAccount(email: $email, password: $password, name: $name, grade: $grade, number: $number){\\n            email,\\n            password,\\n            name,\\n            grade,\\n            number\\n        }\\n    }\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmutation postdelete($pid: Int!){\\n    deletePost(PostId:$pid){\\n      id\\n    }\\n  }\\n\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmutation upload($bid: Int!, $title:String!, $text:String!){\\n    createPost(BoardId:$bid ,title:$title , text: $text){\\n        title\\n        text\\n      }\\n}\\n\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery postinfo($pid : Int!){\\n    seePost(postId:$pid){\\n      id\\n    }\\n  }\\n\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery post_view($pid: Int!){\\n    seeAllComment(postId: $pid){\\n      text\\n      id\\n      UserId\\n      createdAt\\n      User{\\n        name\\n      }\\n    }\\n}\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query seeAllPost($boardId: Int){\\n        seeAllPost(boardId: $boardId){\\n            id\\n            title\\n            text\\n            updatedAt\\n            UserId\\n        }\\n    }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery see_all($a: Int! ){\\n    seeAllPost(boardId: $a){\\n        title\\n        text\\n        id\\n        UserId\\n\\n    }\\n\\n}\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery find_classes($LectureId: Int, $week: Int){\\n    seeAllClasses(LectureId: $LectureId, week: $week){\\n        VOD\\n        startTime\\n        endTime\\n        LectureId\\n    }\\n}\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery {\\n    seeRegistLecture{\\n        id\\n        name\\n        room\\n        professer\\n        code\\n        division\\n        subdivision\\n        system\\n    }\\n}\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery {\\n    seeRegistLecture{\\n        id\\n        name\\n        room\\n        professer\\n        code\\n        division\\n        subdivision\\n        system\\n        classes{\\n            VOD\\n            startTime\\n            endTime\\n            week\\n        }\\n    }\\n}\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery\\n  findContinent($code: ID!){\\n    continent(code: $code){\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query findUserbyName($email: String!){\\n        findUserbyName(email: $email){\\n            id\\n            name\\n            grade\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    mutation login($email: String!, $password: String!){\\n        login(email: $email, password: $password)\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query{\\n        continents{\\n            code\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\ntype Comment{\\n  id   :   Int \\n  text :   String\\n  createdAt:String\\n  updatedAt:String\\n  Post :   Post\\n  PostId :  Int\\n  User  :  User\\n  UserId : Int\\n}\\ntype Post{\\n  id   :   Int \\n  title  :  String\\n  text :   String\\n  createdAt:String\\n  updatedAt:String\\n  Comment :[Comment]\\n  UserId : Int\\n  User: User\\n  BoardId: Int\\n  Board: Board\\n}\\ntype Board {\\n  id: Int\\n  type: Int\\n  Posts: [Post]\\n  }\\ntype User{\\n  id: ID!\\n  password: String\\n  email: String\\n  name: String\\n  grade: Int\\n  Lectures: [Lecture]\\n}\\ntype Lecture {\\n  id: ID!\\n  name: String\\n  code: String\\n  division: String\\n  subdivision: String\\n  professer: String\\n  system: String\\n  semester: String\\n  room: String\\n  classes: [Class]\\n  users: [User]\\n  }\\ntype Class {\\n    id: ID!\\n    VOD: Boolean\\n    week: Int\\n    startTime: String\\n    endTime: String\\n    LectureId: Int\\n    Lecture: Lecture\\n    }  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { exp } from 'react-native-reanimated';\nexport var typedef = gql(_templateObject());\nexport var GET_CONTINENTS = gql(_templateObject2());\nexport var LOGIN = gql(_templateObject3());\nexport var GET_USERID = gql(_templateObject4());\nexport var GET_CONTINENT = gql(_templateObject5());\nexport var SEE_REGIST_LECTURE = gql(_templateObject6());\nexport var SEE_REGIST_LECTURE_ONLY = gql(_templateObject7());\nexport var SEE_ALL_CLASSES = gql(_templateObject8());\nexport var SEE_ALL_POSTERS = gql(_templateObject9());\nexport var SEE_ALL_POST = gql(_templateObject10());\nexport var POST_VIEW = gql(_templateObject11());\nexport var POST_INFO = gql(_templateObject12());\nexport var POST_UPLOAD = gql(_templateObject13());\nexport var POST_DELETE = gql(_templateObject14());\nexport var CREATE_ACCOUNT = gql(_templateObject15());\nexport var TOGGLE_LECTURE = gql(_templateObject16());\nexport var SEE_ALL_LECTURE = gql(_templateObject17());\nexport var SEARCH_LECTURE = gql(_templateObject18());\nexport var POST_LOAD = gql(_templateObject19());\nexport var COMMENT_UPLOAD = gql(_templateObject20());\nexport var COMMENT_DELETE = gql(_templateObject21());\nexport var COMMENT_LOAD = gql(_templateObject22());\nexport var SEE_BOARD = gql(_templateObject23());\nexport var GET_START_DATE = gql(_templateObject24());\nexport var POST_SEARCH = gql(_templateObject25());","map":{"version":3,"sources":["C:/Users/heejun/test0220/queries.js"],"names":["React","gql","exp","typedef","GET_CONTINENTS","LOGIN","GET_USERID","GET_CONTINENT","SEE_REGIST_LECTURE","SEE_REGIST_LECTURE_ONLY","SEE_ALL_CLASSES","SEE_ALL_POSTERS","SEE_ALL_POST","POST_VIEW","POST_INFO","POST_UPLOAD","POST_DELETE","CREATE_ACCOUNT","TOGGLE_LECTURE","SEE_ALL_LECTURE","SEARCH_LECTURE","POST_LOAD","COMMENT_UPLOAD","COMMENT_DELETE","COMMENT_LOAD","SEE_BOARD","GET_START_DATE","POST_SEARCH"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAASC,GAAT,QAAoB,yBAApB;AAEA,OAAO,IAAMC,OAAO,GAAEF,GAAF,mBAAb;AA4DP,OAAO,IAAMG,cAAc,GAAGH,GAAH,oBAApB;AASP,OAAO,IAAOI,KAAK,GAAGJ,GAAH,oBAAZ;AAMP,OAAO,IAAMK,UAAU,GAAGL,GAAH,oBAAhB;AASP,OAAO,IAAMM,aAAa,GAAGN,GAAH,oBAAnB;AAUP,OAAO,IAAMO,kBAAkB,GAAGP,GAAH,oBAAxB;AAoBP,OAAO,IAAMQ,uBAAuB,GAAGR,GAAH,oBAA7B;AAeP,OAAO,IAAMS,eAAe,GAAGT,GAAH,oBAArB;AAWP,OAAO,IAAMU,eAAe,GAAGV,GAAH,oBAArB;AAcP,OAAO,IAAMW,YAAY,GAAGX,GAAH,qBAAlB;AAYP,OAAO,IAAMY,SAAS,GAAGZ,GAAH,qBAAf;AAcP,OAAO,IAAMa,SAAS,GAAGb,GAAH,qBAAf;AASP,OAAO,IAAMc,WAAW,GAAGd,GAAH,qBAAjB;AAUP,OAAO,IAAMe,WAAW,GAAGf,GAAH,qBAAjB;AAUP,OAAO,IAAMgB,cAAc,GAAGhB,GAAH,qBAApB;AAYP,OAAO,IAAMiB,cAAc,GAAGjB,GAAH,qBAApB;AAQP,OAAO,IAAMkB,eAAe,GAAGlB,GAAH,qBAArB;AAgBP,OAAO,IAAMmB,cAAc,GAAGnB,GAAH,qBAApB;AAsBP,OAAO,IAAMoB,SAAS,GAAGpB,GAAH,qBAAf;AAqBP,OAAO,IAAMqB,cAAc,GAAGrB,GAAH,qBAApB;AASP,OAAO,IAAMsB,cAAc,GAAGtB,GAAH,qBAApB;AASP,OAAO,IAAMuB,YAAY,GAAGvB,GAAH,qBAAlB;AAYP,OAAO,IAAMwB,SAAS,GAAGxB,GAAH,qBAAf;AAYP,OAAO,IAAMyB,cAAc,GAAGzB,GAAH,qBAApB;AAQP,OAAO,IAAM0B,WAAW,GAAG1B,GAAH,qBAAjB","sourcesContent":["import React from 'react';\r\nimport {gql} from 'apollo-boost';\r\nimport { exp } from 'react-native-reanimated';\r\n\r\nexport const typedef =gql`\r\ntype Comment{\r\n  id   :   Int \r\n  text :   String\r\n  createdAt:String\r\n  updatedAt:String\r\n  Post :   Post\r\n  PostId :  Int\r\n  User  :  User\r\n  UserId : Int\r\n}\r\ntype Post{\r\n  id   :   Int \r\n  title  :  String\r\n  text :   String\r\n  createdAt:String\r\n  updatedAt:String\r\n  Comment :[Comment]\r\n  UserId : Int\r\n  User: User\r\n  BoardId: Int\r\n  Board: Board\r\n}\r\ntype Board {\r\n  id: Int\r\n  type: Int\r\n  Posts: [Post]\r\n  }\r\ntype User{\r\n  id: ID!\r\n  password: String\r\n  email: String\r\n  name: String\r\n  grade: Int\r\n  Lectures: [Lecture]\r\n}\r\ntype Lecture {\r\n  id: ID!\r\n  name: String\r\n  code: String\r\n  division: String\r\n  subdivision: String\r\n  professer: String\r\n  system: String\r\n  semester: String\r\n  room: String\r\n  classes: [Class]\r\n  users: [User]\r\n  }\r\ntype Class {\r\n    id: ID!\r\n    VOD: Boolean\r\n    week: Int\r\n    startTime: String\r\n    endTime: String\r\n    LectureId: Int\r\n    Lecture: Lecture\r\n    }  \r\n`;\r\n\r\nexport const GET_CONTINENTS = gql`\r\n    query{\r\n        continents{\r\n            code\r\n            name\r\n        }\r\n    }\r\n`;\r\n \r\nexport const  LOGIN = gql`\r\n    mutation login($email: String!, $password: String!){\r\n        login(email: $email, password: $password)\r\n    }\r\n`;\r\n\r\nexport const GET_USERID = gql`\r\n    query findUserbyName($email: String!){\r\n        findUserbyName(email: $email){\r\n            id\r\n            name\r\n            grade\r\n        }\r\n    }\r\n`;\r\nexport const GET_CONTINENT = gql`\r\nquery\r\n  findContinent($code: ID!){\r\n    continent(code: $code){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n// 2021.01.30 수정됨 (field 추가) \r\nexport const SEE_REGIST_LECTURE = gql`\r\nquery {\r\n    seeRegistLecture{\r\n        id\r\n        name\r\n        room\r\n        professer\r\n        code\r\n        division\r\n        subdivision\r\n        system\r\n        classes{\r\n            VOD\r\n            startTime\r\n            endTime\r\n            week\r\n        }\r\n    }\r\n}\r\n`;\r\nexport const SEE_REGIST_LECTURE_ONLY = gql`\r\nquery {\r\n    seeRegistLecture{\r\n        id\r\n        name\r\n        room\r\n        professer\r\n        code\r\n        division\r\n        subdivision\r\n        system\r\n    }\r\n}\r\n`;\r\n\r\nexport const SEE_ALL_CLASSES = gql`\r\nquery find_classes($LectureId: Int, $week: Int){\r\n    seeAllClasses(LectureId: $LectureId, week: $week){\r\n        VOD\r\n        startTime\r\n        endTime\r\n        LectureId\r\n    }\r\n}\r\n`\r\n\r\nexport const SEE_ALL_POSTERS = gql`\r\nquery see_all($a: Int! ){\r\n    seeAllPost(boardId: $a){\r\n        title\r\n        text\r\n        id\r\n        UserId\r\n\r\n    }\r\n\r\n}\r\n`;\r\n\r\n// 같은 기능인데 꼬일까봐 따로 정의함 \r\nexport const SEE_ALL_POST = gql`\r\n    query seeAllPost($boardId: Int){\r\n        seeAllPost(boardId: $boardId){\r\n            id\r\n            title\r\n            text\r\n            updatedAt\r\n            UserId\r\n        }\r\n    }\r\n`\r\n\r\nexport const POST_VIEW = gql`\r\nquery post_view($pid: Int!){\r\n    seeAllComment(postId: $pid){\r\n      text\r\n      id\r\n      UserId\r\n      createdAt\r\n      User{\r\n        name\r\n      }\r\n    }\r\n}\r\n`;\r\n\r\nexport const POST_INFO = gql `\r\nquery postinfo($pid : Int!){\r\n    seePost(postId:$pid){\r\n      id\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const POST_UPLOAD = gql`\r\nmutation upload($bid: Int!, $title:String!, $text:String!){\r\n    createPost(BoardId:$bid ,title:$title , text: $text){\r\n        title\r\n        text\r\n      }\r\n}\r\n\r\n`;\r\n\r\nexport const POST_DELETE = gql`\r\nmutation postdelete($pid: Int!){\r\n    deletePost(PostId:$pid){\r\n      id\r\n    }\r\n  }\r\n\r\n`;\r\n\r\n\r\nexport const CREATE_ACCOUNT = gql`\r\n    mutation createAccount($email: String!, $password: String!, $name: String!, $grade: Int, $number: String!){\r\n        createAccount(email: $email, password: $password, name: $name, grade: $grade, number: $number){\r\n            email,\r\n            password,\r\n            name,\r\n            grade,\r\n            number\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TOGGLE_LECTURE = gql`\r\n    mutation toggleLecture($LectureId: Int!){\r\n        toggleLecture(LectureId: $LectureId){\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SEE_ALL_LECTURE = gql`\r\n    query{\r\n        seeAllLecture{\r\n            id\r\n            name\r\n            code\r\n            division\r\n            subdivision\r\n            professer\r\n            system\r\n            semester\r\n            room\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SEARCH_LECTURE = gql`\r\n    query searchLecture($text: String){\r\n        searchLecture(text: $text){\r\n            id\r\n            name\r\n            code\r\n            division\r\n            subdivision\r\n            professer\r\n            system\r\n            semester\r\n            room\r\n            classes{\r\n                VOD\r\n                startTime\r\n                endTime\r\n                week\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const POST_LOAD = gql `\r\nquery postload($bid: Int!, $snum: Int!, $tnum:Int!){\r\n    loadPost(boardId:$bid, skipNum:$snum, takeNum:$tnum){\r\n      id\r\n      title\r\n      text \r\n      UserId\r\n      createdAt\r\n      Comment{\r\n        id\r\n        text\r\n        createdAt\r\n        UserId\r\n      }\r\n      User{\r\n        name\r\n      }\r\n  }\r\n}\r\n`;\r\n\r\nexport const COMMENT_UPLOAD = gql`\r\nmutation commentcreate($pid:Int!, $text:String!){\r\n    createComment(PostId:$pid ,text:$text){\r\n      id\r\n    }\r\n    \r\n  }\r\n`;\r\n\r\nexport const COMMENT_DELETE = gql`\r\nmutation deletecomment($cid : Int!){\r\n    deleteComment(CommentId:$cid){\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const COMMENT_LOAD = gql`\r\nquery commentload($pid:Int!, $snum:Int!, $tnum:Int!){\r\n  loadComment(postId:$pid , skipNum:$snum, takeNum:$tnum){\r\n    text\r\n    id\r\n    UserId\r\n    createdAt\r\n  }\r\n}\r\n`;\r\n\r\n//추가\r\nexport const SEE_BOARD = gql` \r\nquery {\r\n  seeAllBoard{\r\n    id\r\n    type\r\n    name\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nexport const GET_START_DATE = gql`\r\n  query{\r\n    getStartDate{\r\n      startDate\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POST_SEARCH = gql`\r\nquery searchpost($bid:Int!, $snum:Int!, $tnum:Int!, $text:String!){  \r\n  searchPost(boardId:$bid, skipNum:$snum, takeNum:$tnum, text:$text){\r\n    id\r\n    title\r\n    text \r\n    UserId\r\n    createdAt\r\n    Comment{\r\n      id\r\n      text\r\n      createdAt\r\n      UserId\r\n    }\r\n    User{\r\n      name\r\n    }\r\n  }\r\n   \r\n}\r\n\r\n\r\n\r\n`;"]},"metadata":{},"sourceType":"module"}