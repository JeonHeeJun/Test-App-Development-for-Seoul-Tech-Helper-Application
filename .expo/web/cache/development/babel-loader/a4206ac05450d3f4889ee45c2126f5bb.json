{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\heejun\\\\test0220\\\\screens\\\\RegisterLectureScreen.js\";\nimport React from 'react';\nimport { UserContext } from \"../components/context\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ApolloClient, InMemoryCache, useQuery, ApolloProvider, useMutation } from \"@apollo/client\";\nimport { SEE_REGIST_LECTURE, SEE_REGIST_LECTURE_ONLY, TOGGLE_LECTURE, SEARCH_LECTURE } from \"../queries\";\nimport { SearchBar } from 'react-native-elements';\nimport { EvilIcons, MaterialIcons } from '@expo/vector-icons';\nimport { validate } from 'graphql';\nvar NOW = new Date();\nvar TIMEZONE = NOW.getTimezoneOffset() * 60000;\n\nfunction LectureCard(_ref) {\n  var lecture = _ref.lecture,\n      registered = _ref.registered,\n      class_list = _ref.class_list;\n  console.log(\"lecture: \", lecture);\n\n  var _React$useState = React.useState(registered),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reg = _React$useState2[0],\n      setReg = _React$useState2[1];\n\n  var _useMutation = useMutation(TOGGLE_LECTURE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      toggleLectureMutation = _useMutation2[0];\n\n  var validate = function validate() {\n    for (var i = 0; i < lecture.classes.length; i++) {\n      if (lecture.classes[i].VOD == true) continue;\n      var start_time = new Date(Number(lecture.classes[i].startTime) + TIMEZONE);\n\n      for (var j = 0; j < class_list.length; j++) {\n        if (class_list[j].start_time <= start_time && start_time <= class_list[j].end_time) return false;\n      }\n    }\n\n    return true;\n  };\n\n  var add = function add() {\n    var res, num_of_classes, i, start_time, end_time, class_obj;\n    return _regeneratorRuntime.async(function add$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(lecture.id);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(toggleLectureMutation({\n              variables: {\n                LectureId: Number(lecture.id)\n              }\n            }));\n\n          case 4:\n            res = _context.sent;\n            setReg(true);\n            console.log(res);\n            num_of_classes = lecture.classes.length;\n            i = 0;\n\n          case 9:\n            if (!(i < num_of_classes)) {\n              _context.next = 19;\n              break;\n            }\n\n            if (!lecture.classes[i].VOD) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 16);\n\n          case 12:\n            start_time = new Date(Number(lecture.classes[i].startTime) + TIMEZONE);\n            end_time = new Date(Number(lecture.classes[i].endTime) + TIMEZONE);\n            class_obj = {\n              name: lecture.name,\n              room: lecture.room,\n              start_time: start_time,\n              end_time: end_time,\n              week: lecture.classes[i].week\n            };\n            class_list.push(class_obj);\n\n          case 16:\n            i++;\n            _context.next = 9;\n            break;\n\n          case 19:\n            console.log(\"class_list after add():\", class_list);\n            _context.next = 25;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 22]], Promise);\n  };\n\n  if (reg) {\n    return React.createElement(View, {\n      style: styles.card2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.lectureCardName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, lecture.name), lecture.system == \"VOD\" ? React.createElement(MaterialIcons, {\n      name: \"ondemand-video\",\n      size: 16,\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 39\n      }\n    }) : null), React.createElement(View, {\n      style: {\n        marginVertical: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, lecture.professer)), React.createElement(Text, {\n      style: styles.lectureCardInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, lecture.room, \" \", lecture.subdivision, \" \", lecture.system)), React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, React.createElement(EvilIcons, {\n      name: \"check\",\n      size: 32,\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return React.createElement(View, {\n    style: styles.card2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.lectureCardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, lecture.name), lecture.system == \"VOD\" ? React.createElement(MaterialIcons, {\n    name: \"ondemand-video\",\n    size: 16,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }) : null), React.createElement(View, {\n    style: {\n      marginVertical: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, lecture.professer)), React.createElement(Text, {\n    style: styles.lectureCardInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, lecture.room, \" \", lecture.subdivision, \" \", lecture.system)), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      Alert.alert(\"강의를 추가하시겠습니까?\", \"\", [{\n        text: \"예\",\n        onPress: function onPress() {\n          validate() ? add() : Alert.alert(\"이미 수강하는 강의와 시간이 겹칩니다\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"아니오\",\n        onPress: function onPress() {\n          return;\n        }\n      }], {\n        cancelable: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(EvilIcons, {\n    name: \"plus\",\n    size: 32,\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction SearchResult(_ref2) {\n  var _this = this;\n\n  var text = _ref2.text,\n      registeredId = _ref2.registeredId,\n      class_list = _ref2.class_list;\n  console.log(\"SearchResult::text=\", text);\n\n  var _useQuery = useQuery(SEARCH_LECTURE, {\n    variables: {\n      text: text\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (error) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, error));\n  }\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (data) {\n    console.log(\"SearchResult::data=\", data);\n    var lectures = data.searchLecture;\n    console.log(\"SearchResult::lectures=\", lectures);\n    return React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, lectures.map(function (lecture, index) {\n      var registered = false;\n\n      if (registeredId.includes(lecture.id)) {\n        registered = true;\n      }\n\n      return React.createElement(LectureCard, {\n        key: index,\n        lecture: lecture,\n        registered: registered,\n        class_list: class_list,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      });\n    }));\n  }\n}\n\nfunction Main(_ref3) {\n  var navigation = _ref3.navigation;\n  console.log(\"LectureScreen rendering\");\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      text = _React$useState4[0],\n      setText = _React$useState4[1];\n\n  var handleTextChange = function handleTextChange(val) {\n    setText(val);\n  };\n\n  var _useQuery2 = useQuery(SEE_REGIST_LECTURE),\n      data = _useQuery2.data,\n      loading = _useQuery2.loading,\n      error = _useQuery2.error;\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  if (error) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, \"ERROR\"));\n  }\n\n  if (data) {\n    var lectures = data.seeRegistLecture;\n    console.log(\"RegisterLectureScreen::Main::lectures=\", lectures);\n    var class_list = [];\n\n    for (var i = 0; i < lectures.length; i++) {\n      var num_of_classes = lectures[i].classes.length;\n\n      for (var j = 0; j < num_of_classes; j++) {\n        if (lectures[i].classes[j].VOD) continue;\n        var start_time = new Date(Number(lectures[i].classes[j].startTime) + TIMEZONE);\n        var end_time = new Date(Number(lectures[i].classes[j].endTime) + TIMEZONE);\n        var class_obj = {\n          name: lectures[i].name,\n          room: lectures[i].room,\n          start_time: start_time,\n          end_time: end_time,\n          week: lectures[i].classes[j].week,\n          vod: lectures[i].classes[j].VOD\n        };\n        class_list.push(class_obj);\n      }\n    }\n\n    console.log(\"RegisterLectureScreen::Main::class_list=\", class_list);\n    var registeredId = new Array();\n\n    for (var _i = 0; _i < lectures.length; _i++) {\n      registeredId.push(lectures[_i].id);\n    }\n\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, React.createElement(SearchBar, {\n      placeholder: \"\\uAC15\\uC758 \\uCC3E\\uAE30\",\n      containerStyle: {\n        backgroundColor: \"#eeeeee\",\n        borderTopWidth: 0,\n        borderBottomWidth: 0\n      },\n      inputStyle: {\n        backgroundColor: \"#dcdcdc\"\n      },\n      inputContainerStyle: {\n        backgroundColor: \"#dcdcdc\"\n      },\n      onChangeText: function onChangeText(val) {\n        return handleTextChange(val);\n      },\n      value: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }), React.createElement(SearchResult, {\n      text: text,\n      registeredId: registeredId,\n      class_list: class_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('ScheduleScreen');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, \"\\uB3CC\\uC544\\uAC00\\uAE30\"))));\n  }\n}\n\nexport default function RegisterLectureScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  var userInfo = React.useContext(UserContext);\n  var client = new ApolloClient({\n    uri: \"http://52.251.50.212:4000/\",\n    cache: new InMemoryCache(),\n    headers: {\n      Authorization: \"Bearer \" + userInfo.token\n    }\n  });\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, React.createElement(Main, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  lectureCardInfo: {\n    fontSize: 12,\n    color: \"grey\"\n  },\n  lectureCardName: {\n    fontSize: 18,\n    fontWeight: \"600\"\n  },\n  notificationList: {\n    flexDirection: \"row\",\n    padding: 3\n  },\n  card2: {\n    backgroundColor: \"white\",\n    padding: 10,\n    marginVertical: 5,\n    marginHorizontal: 25,\n    borderWidth: 1,\n    borderColor: \"#dcdcdc\",\n    borderRadius: 10,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  card: {\n    backgroundColor: \"white\",\n    padding: 20,\n    margin: 25,\n    borderWidth: 1,\n    borderColor: \"#dcdcdc\",\n    borderRadius: 10,\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n  date: {\n    margin: 5,\n    color: \"blue\",\n    fontSize: 15,\n    borderColor: \"black\",\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n  time: {\n    margin: 5,\n    fontWeight: \"600\",\n    fontSize: 20,\n    textAlign: \"center\"\n  },\n  subject: {\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"600\"\n  },\n  location: {\n    textAlign: \"center\",\n    fontSize: 10,\n    color: \"#646464\"\n  },\n  week: {\n    margin: 5,\n    textAlign: \"center\",\n    fontSize: 10,\n    color: \"#646464\"\n  },\n  where: {\n    marginTop: 7,\n    padding: 3,\n    borderRadius: 10,\n    backgroundColor: \"#dcdcdc\",\n    alignSelf: \"center\",\n    fontSize: 10,\n    color: \"grey\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    marginVertical: 10,\n    marginHorizontal: 10,\n    borderWidth: 1,\n    padding: 10,\n    width: \"80%\",\n    borderRadius: 10,\n    backgroundColor: \"#0A6EFF\",\n    borderColor: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/heejun/test0220/screens/RegisterLectureScreen.js"],"names":["React","UserContext","ApolloClient","InMemoryCache","useQuery","ApolloProvider","useMutation","SEE_REGIST_LECTURE","SEE_REGIST_LECTURE_ONLY","TOGGLE_LECTURE","SEARCH_LECTURE","SearchBar","EvilIcons","MaterialIcons","validate","NOW","Date","TIMEZONE","getTimezoneOffset","LectureCard","lecture","registered","class_list","console","log","useState","reg","setReg","toggleLectureMutation","i","classes","length","VOD","start_time","Number","startTime","j","end_time","add","id","variables","LectureId","res","num_of_classes","endTime","class_obj","name","room","week","push","styles","card2","flex","flexDirection","lectureCardName","system","marginVertical","professer","lectureCardInfo","subdivision","justifyContent","alignItems","Alert","alert","text","onPress","style","cancelable","SearchResult","registeredId","data","loading","error","lectures","searchLecture","map","index","includes","Main","navigation","setText","handleTextChange","val","seeRegistLecture","vod","Array","backgroundColor","borderTopWidth","borderBottomWidth","button","navigate","fontSize","color","RegisterLectureScreen","userInfo","useContext","client","uri","cache","headers","Authorization","token","StyleSheet","create","fontWeight","notificationList","padding","marginHorizontal","borderWidth","borderColor","borderRadius","textAlign","card","margin","date","time","subject","location","where","marginTop","alignSelf","container","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { UserContext } from '../components/context';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, ActivityIndicator,ScrollView, Alert } from 'react-native';\r\nimport { ApolloClient, InMemoryCache, useQuery, ApolloProvider, useMutation } from \"@apollo/client\";\r\nimport { SEE_REGIST_LECTURE, SEE_REGIST_LECTURE_ONLY, TOGGLE_LECTURE, SEARCH_LECTURE } from '../queries';\r\nimport { SearchBar } from 'react-native-elements';\r\nimport { EvilIcons, MaterialIcons } from '@expo/vector-icons'\r\nimport { validate } from 'graphql';\r\n\r\nconst NOW = new Date();\r\nconst TIMEZONE = NOW.getTimezoneOffset()*60000;\r\n\r\n\r\nfunction LectureCard({lecture, registered, class_list}){\r\n  console.log(\"lecture: \", lecture);\r\n  const [reg, setReg] = React.useState(registered);\r\n  const [toggleLectureMutation] = useMutation(TOGGLE_LECTURE)\r\n\r\n  const validate = ()=>{\r\n    for(let i=0; i<lecture.classes.length; i++){\r\n      if(lecture.classes[i].VOD == true) continue;\r\n      let start_time = new Date(Number(lecture.classes[i].startTime)+TIMEZONE);\r\n      //let end_time = new Date(Number(lecture.classes[i].endTime)+TIMEZONE);\r\n      for (let j=0; j<class_list.length; j++){\r\n        if (class_list[j].start_time <= start_time && start_time <= class_list[j].end_time) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const add = async () =>{\r\n    try{\r\n      console.log(lecture.id);\r\n      let res = await toggleLectureMutation({\r\n        variables:{\r\n          LectureId: Number(lecture.id)\r\n        }\r\n      });\r\n      setReg(true);\r\n      console.log(res)\r\n      let num_of_classes = lecture.classes.length;\r\n      for(let i=0; i<num_of_classes; i++){\r\n        if(lecture.classes[i].VOD) continue; // VOD는 시간표 겹치는지 체크할 필요 없다.\r\n        let start_time = new Date(Number(lecture.classes[i].startTime)+TIMEZONE);\r\n        let end_time = new Date(Number(lecture.classes[i].endTime)+TIMEZONE);\r\n        let class_obj = {\r\n          name: lecture.name,\r\n          room: lecture.room,\r\n          start_time: start_time,\r\n          end_time: end_time,\r\n          week: lecture.classes[i].week\r\n        }\r\n        class_list.push(class_obj);\r\n      }\r\n      console.log(\"class_list after add():\",class_list);\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n  if(reg){\r\n    return(\r\n      <View style={styles.card2}>\r\n        <View style={{flex:8}}>\r\n          <View style={{flexDirection:\"row\"}}>\r\n            <Text style={styles.lectureCardName}>{lecture.name}</Text>\r\n            {lecture.system == \"VOD\"? <MaterialIcons name=\"ondemand-video\" size={16} color=\"red\"/>: null}\r\n          </View>\r\n          <View style={{marginVertical:3}}>\r\n            <Text>{lecture.professer}</Text>\r\n          </View>\r\n          <Text style={styles.lectureCardInfo}>{lecture.room} {lecture.subdivision} {lecture.system}</Text>\r\n        </View>\r\n        <View style={{flex:1, justifyContent:\"center\", alignItems:\"center\"}}>\r\n          <TouchableOpacity>\r\n            <EvilIcons name=\"check\" size={32} color=\"green\"/>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n  return(\r\n    <View style={styles.card2}>\r\n      <View style={{flex:8}}>\r\n        <View style={{flexDirection:\"row\"}}>\r\n          <Text style={styles.lectureCardName}>{lecture.name}</Text>\r\n          {lecture.system == \"VOD\"? <MaterialIcons name=\"ondemand-video\" size={16} color=\"red\"/>: null}\r\n        </View>\r\n        <View style={{marginVertical:3}}>\r\n          <Text>{lecture.professer}</Text>\r\n        </View>\r\n        <Text style={styles.lectureCardInfo}>{lecture.room} {lecture.subdivision} {lecture.system}</Text>\r\n      </View>\r\n      <View style={{flex:1, justifyContent:\"center\", alignItems:\"center\"}}>\r\n        {\r\n          \r\n        }\r\n        <TouchableOpacity onPress={()=>{Alert.alert(\r\n            \"강의를 추가하시겠습니까?\",\r\n            \"\",\r\n            [\r\n              {\r\n                text: \"예\",\r\n                onPress: () => {\r\n                  validate()?\r\n                    add():Alert.alert(\"이미 수강하는 강의와 시간이 겹칩니다\");\r\n                },\r\n                style: \"cancel\"\r\n              },\r\n              { text: \"아니오\", onPress: () => {return;} }\r\n            ],\r\n            { cancelable: true }\r\n          );} }>\r\n          <EvilIcons name=\"plus\" size={32} color=\"blue\"/>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction SearchResult({text, registeredId, class_list}){\r\n\r\n  console.log(\"SearchResult::text=\",text)\r\n  const { data, loading, error } = useQuery(SEARCH_LECTURE, {\r\n    variables: {\r\n      text: text\r\n    }\r\n  });\r\n  if(error){\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>{error}</Text>\r\n      </View>\r\n    )   \r\n  }\r\n  if(loading){\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    )   \r\n  }\r\n  if(data){\r\n    console.log(\"SearchResult::data=\",data);\r\n    let lectures = data.searchLecture;\r\n    console.log(\"SearchResult::lectures=\", lectures);\r\n    return(\r\n      <ScrollView>\r\n        {\r\n          lectures.map((lecture, index)=>{\r\n            let registered = false;\r\n            if (registeredId.includes(lecture.id)){\r\n              registered = true;\r\n            }\r\n            return(\r\n              <LectureCard key={index} lecture={lecture} registered={registered} class_list={class_list}/>\r\n            )\r\n          })\r\n        }\r\n      </ScrollView>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction Main({navigation}){\r\n    console.log(\"LectureScreen rendering\");\r\n    const [text, setText] = React.useState(\"\");\r\n    const handleTextChange = (val)=>{\r\n      setText(val);\r\n    }\r\n    const { data, loading, error} = useQuery(SEE_REGIST_LECTURE);\r\n    if(loading){\r\n      return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <ActivityIndicator size=\"large\" />\r\n        </View>\r\n      )    \r\n    }\r\n    if(error){\r\n      return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Text>ERROR</Text>\r\n        </View>\r\n      )    \r\n    }\r\n    if(data){\r\n      let lectures = data.seeRegistLecture;\r\n      console.log(\"RegisterLectureScreen::Main::lectures=\",lectures);\r\n      let class_list = []; \r\n      for(let i=0; i<lectures.length; i++){\r\n        let num_of_classes = lectures[i].classes.length;\r\n        for(let j=0; j<num_of_classes; j++){\r\n          if(lectures[i].classes[j].VOD) continue; // VOD는 시간표 겹치는지 체크할 필요 없다.\r\n          let start_time = new Date(Number(lectures[i].classes[j].startTime)+TIMEZONE);\r\n          let end_time = new Date(Number(lectures[i].classes[j].endTime)+TIMEZONE);\r\n          let class_obj = {\r\n            name: lectures[i].name,\r\n            room: lectures[i].room,\r\n            start_time: start_time,\r\n            end_time: end_time,\r\n            week: lectures[i].classes[j].week,\r\n            vod: lectures[i].classes[j].VOD\r\n          }\r\n          class_list.push(class_obj);\r\n        }\r\n      }\r\n      console.log(\"RegisterLectureScreen::Main::class_list=\", class_list);\r\n      let registeredId = new Array();\r\n      for(let i=0; i<lectures.length; i++){\r\n        registeredId.push(lectures[i].id);\r\n      }\r\n      return(\r\n        <View style={{ flex: 1}}>\r\n          <SearchBar \r\n            placeholder=\"강의 찾기\"\r\n            containerStyle={{backgroundColor:\"#eeeeee\",borderTopWidth:0, borderBottomWidth:0,}}\r\n            inputStyle={{backgroundColor:\"#dcdcdc\"}}\r\n            inputContainerStyle={{backgroundColor:\"#dcdcdc\"}}\r\n            onChangeText={(val)=>handleTextChange(val)}\r\n            value={text}\r\n          />\r\n          <SearchResult text={text} registeredId={registeredId} class_list={class_list}/>\r\n          <View style={{alignItems:\"center\", justifyContent:\"center\"}}>\r\n            <TouchableOpacity style={styles.button} onPress={()=>navigation.navigate('ScheduleScreen')}>\r\n              <Text style={{fontSize:20, color:\"white\"}}>돌아가기</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default function RegisterLectureScreen({navigation}) {\r\n    const userInfo = React.useContext(UserContext);\r\n    const client = new ApolloClient({\r\n      uri: \"http://52.251.50.212:4000/\",\r\n      cache: new InMemoryCache(),\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    });\r\n  \r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <Main navigation={navigation}/>\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n\r\nconst styles = StyleSheet.create({\r\n  lectureCardInfo:{\r\n    fontSize:12,\r\n    color:\"grey\",\r\n  }, \r\n  lectureCardName:{\r\n    fontSize:18,\r\n    fontWeight:\"600\"\r\n  },\r\n  notificationList: {\r\n    flexDirection: \"row\",\r\n    padding: 3,\r\n  },\r\n  card2: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    marginHorizontal: 25,\r\n    borderWidth: 1,\r\n    borderColor: \"#dcdcdc\",\r\n    borderRadius: 10,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n    padding: 20,\r\n    margin: 25,\r\n    borderWidth: 1,\r\n    borderColor: \"#dcdcdc\",\r\n    borderRadius: 10,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  date: {\r\n    margin: 5,\r\n    color: \"blue\",\r\n    fontSize: 15,\r\n    borderColor: \"black\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  time: {\r\n    margin: 5,\r\n    fontWeight: \"600\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  subject: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"600\",\r\n  },\r\n  location: {\r\n    textAlign: \"center\",\r\n    fontSize: 10,\r\n    color: \"#646464\",\r\n  },\r\n  week: {\r\n    margin: 5,\r\n    textAlign: \"center\",\r\n    fontSize: 10,\r\n    color: \"#646464\",\r\n  },\r\n  where: {\r\n    marginTop: 7,\r\n    padding: 3,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#dcdcdc\",\r\n    alignSelf: \"center\",\r\n    fontSize: 10,\r\n    color: \"grey\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n    //borderStyle:\"dashed\", \r\n    borderWidth:1,\r\n    padding:10,\r\n    width: \"80%\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"#0A6EFF\",\r\n    borderColor: \"white\"\r\n},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}