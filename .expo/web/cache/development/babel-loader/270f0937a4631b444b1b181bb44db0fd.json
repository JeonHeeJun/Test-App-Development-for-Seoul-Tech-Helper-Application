{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\heejun\\\\test0220\\\\screens\\\\EditLectureScreen.js\";\nimport React from 'react';\nimport { UserContext } from \"../components/context\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ApolloClient, InMemoryCache, useQuery, ApolloProvider, useMutation } from \"@apollo/client\";\nimport { SEE_REGIST_LECTURE_ONLY, TOGGLE_LECTURE } from \"../queries\";\nimport { Icon } from 'react-native-elements';\nimport { EvilIcons, MaterialIcons } from '@expo/vector-icons';\n\nfunction LectureCard(_ref) {\n  var navigation = _ref.navigation,\n      lecture = _ref.lecture;\n  console.log(\"lecture: \", lecture);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reg = _React$useState2[0],\n      setReg = _React$useState2[1];\n\n  var _useMutation = useMutation(TOGGLE_LECTURE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      toggleLectureMutation = _useMutation2[0];\n\n  var remove = function remove() {\n    var res;\n    return _regeneratorRuntime.async(function remove$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(lecture.id);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(toggleLectureMutation({\n              variables: {\n                LectureId: Number(lecture.id)\n              }\n            }));\n\n          case 4:\n            res = _context.sent;\n            console.log(res);\n            setReg(false);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  if (!reg) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.card2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.lectureCardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, lecture.name), lecture.system == \"VOD\" ? React.createElement(MaterialIcons, {\n    name: \"ondemand-video\",\n    size: 16,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }) : null), React.createElement(View, {\n    style: {\n      marginVertical: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, lecture.professer)), React.createElement(Text, {\n    style: styles.lectureCardInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, lecture.room, \" \", lecture.subdivision, \" \", lecture.system)), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      Alert.alert(\"강의를 삭제하시겠습니까?\", \"\", [{\n        text: \"예\",\n        onPress: function onPress() {\n          remove();\n          navigation.navigate(\"EditLectureScreen\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"아니오\",\n        onPress: function onPress() {\n          return;\n        }\n      }], {\n        cancelable: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(EvilIcons, {\n    name: \"minus\",\n    size: 32,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction Main(_ref2) {\n  var _this = this;\n\n  var navigation = _ref2.navigation;\n  console.log(\"LectureScreen rendering\");\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      text = _React$useState4[0],\n      setText = _React$useState4[1];\n\n  var _useQuery = useQuery(SEE_REGIST_LECTURE_ONLY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  if (error) {}\n\n  if (data) {\n    var lectures = data.seeRegistLecture;\n    console.log(\"lectures in EditLectureScreen:\", lectures);\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        marginVertical: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        fontSize: 20,\n        fontWeight: \"700\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"\\uB0B4 \\uAC15\\uC758 \\uBAA9\\uB85D\")), React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, lectures.map(function (lecture, index) {\n      return React.createElement(LectureCard, {\n        key: index,\n        lecture: lecture,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 24\n        }\n      });\n    })), React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('ScheduleScreen');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"\\uB3CC\\uC544\\uAC00\\uAE30\"))));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4 \\uAC15\\uC758\"), React.createElement(Button, {\n    title: \"back\",\n    onPress: function onPress() {\n      return navigation.navigate(\"ScheduleScreen\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default function EditLectureScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var userInfo = React.useContext(UserContext);\n  var client = new ApolloClient({\n    uri: \"http://52.251.50.212:4000/\",\n    cache: new InMemoryCache(),\n    headers: {\n      Authorization: \"Bearer \" + userInfo.token\n    }\n  });\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, React.createElement(Main, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  lectureCardInfo: {\n    fontSize: 12,\n    color: \"grey\"\n  },\n  lectureCardName: {\n    fontSize: 18,\n    fontWeight: \"600\"\n  },\n  notificationList: {\n    flexDirection: \"row\",\n    padding: 3\n  },\n  card2: {\n    backgroundColor: \"white\",\n    padding: 10,\n    marginVertical: 5,\n    marginHorizontal: 25,\n    borderWidth: 1,\n    borderColor: \"#dcdcdc\",\n    borderRadius: 10,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  card: {\n    backgroundColor: \"white\",\n    padding: 20,\n    margin: 25,\n    borderWidth: 1,\n    borderColor: \"#dcdcdc\",\n    borderRadius: 10,\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n  date: {\n    margin: 5,\n    color: \"blue\",\n    fontSize: 15,\n    borderColor: \"black\",\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n  time: {\n    margin: 5,\n    fontWeight: \"600\",\n    fontSize: 20,\n    textAlign: \"center\"\n  },\n  subject: {\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"600\"\n  },\n  location: {\n    textAlign: \"center\",\n    fontSize: 10,\n    color: \"#646464\"\n  },\n  week: {\n    margin: 5,\n    textAlign: \"center\",\n    fontSize: 10,\n    color: \"#646464\"\n  },\n  where: {\n    marginTop: 7,\n    padding: 3,\n    borderRadius: 10,\n    backgroundColor: \"#dcdcdc\",\n    alignSelf: \"center\",\n    fontSize: 10,\n    color: \"grey\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    marginVertical: 10,\n    marginHorizontal: 10,\n    borderWidth: 1,\n    padding: 10,\n    width: \"80%\",\n    borderRadius: 10,\n    backgroundColor: \"#1478FF\",\n    borderColor: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/heejun/test0220/screens/EditLectureScreen.js"],"names":["React","UserContext","ApolloClient","InMemoryCache","useQuery","ApolloProvider","useMutation","SEE_REGIST_LECTURE_ONLY","TOGGLE_LECTURE","Icon","EvilIcons","MaterialIcons","LectureCard","navigation","lecture","console","log","useState","reg","setReg","toggleLectureMutation","remove","id","variables","LectureId","Number","res","styles","card2","flex","flexDirection","lectureCardName","name","system","marginVertical","professer","lectureCardInfo","room","subdivision","justifyContent","alignItems","Alert","alert","text","onPress","navigate","style","cancelable","Main","setText","loading","error","data","lectures","seeRegistLecture","textAlign","fontSize","fontWeight","map","index","button","color","EditLectureScreen","userInfo","useContext","client","uri","cache","headers","Authorization","token","StyleSheet","create","notificationList","padding","backgroundColor","marginHorizontal","borderWidth","borderColor","borderRadius","card","margin","date","time","subject","location","week","where","marginTop","alignSelf","container","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { UserContext } from '../components/context';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, ActivityIndicator,ScrollView, Alert } from 'react-native';\r\nimport { ApolloClient, InMemoryCache, useQuery, ApolloProvider, useMutation } from \"@apollo/client\";\r\nimport { SEE_REGIST_LECTURE_ONLY, TOGGLE_LECTURE } from '../queries';\r\nimport { Icon } from 'react-native-elements';\r\nimport { EvilIcons, MaterialIcons } from '@expo/vector-icons'\r\n\r\nfunction LectureCard({navigation,lecture}){\r\n  console.log(\"lecture: \", lecture);\r\n  const [reg,setReg] = React.useState(true);\r\n  const [toggleLectureMutation] = useMutation(TOGGLE_LECTURE)\r\n\r\n  const remove = async () =>{\r\n    try{\r\n      console.log(lecture.id);\r\n      let res = await toggleLectureMutation({\r\n        variables:{\r\n          LectureId: Number(lecture.id)\r\n        }\r\n      });\r\n      console.log(res)\r\n      setReg(false);\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n  if(!reg){\r\n    return(\r\n      <View>\r\n      </View>\r\n    )\r\n  }\r\n  return(\r\n    <View style={styles.card2}>\r\n      <View style={{flex:8}}>\r\n        <View style={{flexDirection:\"row\"}}>\r\n          <Text style={styles.lectureCardName}>{lecture.name}</Text>\r\n          {lecture.system == \"VOD\"? <MaterialIcons name=\"ondemand-video\" size={16} color=\"red\"/>: null}\r\n        </View>\r\n        <View style={{marginVertical:3}}>\r\n          <Text>{lecture.professer}</Text>\r\n        </View>\r\n        <Text style={styles.lectureCardInfo}>{lecture.room} {lecture.subdivision} {lecture.system}</Text>\r\n      </View>\r\n      <View style={{flex:1, justifyContent:\"center\", alignItems:\"center\"}}>\r\n        <TouchableOpacity onPress={()=>{Alert.alert(\r\n            \"강의를 삭제하시겠습니까?\",\r\n            \"\",\r\n            [\r\n              {\r\n                text: \"예\",\r\n                onPress: () => {\r\n                  remove();\r\n                  navigation.navigate(\"EditLectureScreen\")\r\n                },\r\n                style: \"cancel\"\r\n              },\r\n              { text: \"아니오\", onPress: () => {return;} }\r\n            ],\r\n            { cancelable: true }\r\n          );} }>\r\n          <EvilIcons name=\"minus\" size={32} color=\"red\"/>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction Main({navigation}){\r\n    console.log(\"LectureScreen rendering\");\r\n    const [text, setText] = React.useState(null);\r\n    \r\n    const { loading, error, data } = useQuery(SEE_REGIST_LECTURE_ONLY);\r\n    if(loading){\r\n      return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <ActivityIndicator size=\"large\" />\r\n        </View>\r\n      )    \r\n    }\r\n    if(error){\r\n\r\n    }\r\n    if(data){\r\n      let lectures = data.seeRegistLecture;\r\n\r\n      console.log(\"lectures in EditLectureScreen:\", lectures);\r\n      return(\r\n        <View style={{flex:1}}>\r\n          <View style={{marginVertical:20}}>\r\n            <Text style={{textAlign:\"center\", fontSize:20, fontWeight:\"700\"}}>내 강의 목록</Text>\r\n          </View>\r\n          <ScrollView>\r\n            {\r\n              lectures.map((lecture, index)=>{\r\n                return <LectureCard key={index} lecture={lecture} navigation={navigation}/>\r\n              })\r\n            }\r\n          </ScrollView>\r\n          <View style={{alignItems:\"center\", justifyContent:\"center\"}}>\r\n            <TouchableOpacity style={styles.button} onPress={()=>navigation.navigate('ScheduleScreen')}>\r\n              <Text style={{fontSize:20, color:\"white\"}}>돌아가기</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n\r\n    return(\r\n      <View style={{ flex: 1}}>\r\n        <Text>내 강의</Text>\r\n        <Button title=\"back\" onPress={()=>navigation.navigate(\"ScheduleScreen\")} />\r\n      </View>\r\n    )\r\n  }\r\n  \r\nexport default function EditLectureScreen({navigation}) {\r\n  const userInfo = React.useContext(UserContext);\r\n  const client = new ApolloClient({\r\n    uri: \"http://52.251.50.212:4000/\",\r\n    cache: new InMemoryCache(),\r\n    headers: {\r\n      Authorization: `Bearer ${userInfo.token}`\r\n    }\r\n  });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Main navigation={navigation}/>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  lectureCardInfo:{\r\n    fontSize:12,\r\n    color:\"grey\",\r\n  },  \r\n  lectureCardName:{\r\n    fontSize:18,\r\n    fontWeight:\"600\"\r\n  },  \r\n  notificationList: {\r\n    flexDirection: \"row\",\r\n    padding: 3,\r\n  },\r\n  card2: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    marginHorizontal: 25,\r\n    borderWidth: 1,\r\n    borderColor: \"#dcdcdc\",\r\n    borderRadius: 10,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n    padding: 20,\r\n    margin: 25,\r\n    borderWidth: 1,\r\n    borderColor: \"#dcdcdc\",\r\n    borderRadius: 10,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  date: {\r\n    margin: 5,\r\n    color: \"blue\",\r\n    fontSize: 15,\r\n    borderColor: \"black\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  time: {\r\n    margin: 5,\r\n    fontWeight: \"600\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  subject: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"600\",\r\n  },\r\n  location: {\r\n    textAlign: \"center\",\r\n    fontSize: 10,\r\n    color: \"#646464\",\r\n  },\r\n  week: {\r\n    margin: 5,\r\n    textAlign: \"center\",\r\n    fontSize: 10,\r\n    color: \"#646464\",\r\n  },\r\n  where: {\r\n    marginTop: 7,\r\n    padding: 3,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#dcdcdc\",\r\n    alignSelf: \"center\",\r\n    fontSize: 10,\r\n    color: \"grey\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n    //borderStyle:\"dashed\", \r\n    borderWidth:1,\r\n    padding:10,\r\n    width: \"80%\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"#1478FF\",\r\n    borderColor: \"white\"\r\n},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}