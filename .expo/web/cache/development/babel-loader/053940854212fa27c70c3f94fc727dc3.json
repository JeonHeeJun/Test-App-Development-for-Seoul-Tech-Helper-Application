{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\heejun\\\\test0220\\\\screens\\\\SignUpScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as Animatable from 'react-native-animatable';\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { ApolloClient, InMemoryCache, useQuery, ApolloProvider, useMutation } from \"@apollo/client\";\nimport { CREATE_ACCOUNT, DATABASE_URL } from \"../queries\";\nimport { UserContext } from \"../components/context\";\nvar EMAIL_RE = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nvar NUM_LEN = 8;\n\nvar Main = function Main(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    email: '',\n    username: '',\n    password: '',\n    repassword: '',\n    number: '',\n    check_text: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _useMutation = useMutation(CREATE_ACCOUNT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createAccountMutation = _useMutation2[0];\n\n  var handleEmailChange = function handleEmailChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      email: val\n    }));\n  };\n\n  var handleUsernameChange = function handleUsernameChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      username: val\n    }));\n  };\n\n  var handlePasswordChange = function handlePasswordChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      password: val\n    }));\n  };\n\n  var handleRepasswordChange = function handleRepasswordChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      repassword: val\n    }));\n  };\n\n  var handleNumberChange = function handleNumberChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      number: val\n    }));\n  };\n\n  var handleSignup = function handleSignup(email, username, number, password, repassword) {\n    var default_grade, _await$createAccountM, _data, loading, error;\n\n    return _regeneratorRuntime.async(function handleSignup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(EMAIL_RE.test(email) == false)) {\n              _context.next = 4;\n              break;\n            }\n\n            Alert.alert(\"이메일 형식을 확인하세요\");\n            _context.next = 39;\n            break;\n\n          case 4:\n            if (!(username == '')) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"이름을 입력하세요\");\n            _context.next = 39;\n            break;\n\n          case 8:\n            if (!(number.length != NUM_LEN)) {\n              _context.next = 12;\n              break;\n            }\n\n            Alert.alert(\"학번을 확인하세요\");\n            _context.next = 39;\n            break;\n\n          case 12:\n            if (!(password == '')) {\n              _context.next = 16;\n              break;\n            }\n\n            Alert.alert(\"비밀번호를 입력하세요\");\n            _context.next = 39;\n            break;\n\n          case 16:\n            if (!(password != repassword)) {\n              _context.next = 20;\n              break;\n            }\n\n            Alert.alert(\"비밀번호를 확인해주세요\");\n            _context.next = 39;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            default_grade = 2;\n            _context.next = 24;\n            return _regeneratorRuntime.awrap(createAccountMutation({\n              variables: {\n                email: email,\n                name: username,\n                password: password,\n                grade: default_grade,\n                number: number\n              }\n            }));\n\n          case 24:\n            _await$createAccountM = _context.sent;\n            _data = _await$createAccountM.data;\n            loading = _await$createAccountM.loading;\n            error = _await$createAccountM.error;\n            console.log(\"data:\", _data);\n            console.log(\"loading:\", loading);\n            console.log(\"error:\", error);\n\n            if (_data) {\n              alert(\"회원가입 성공! 다시 로그인해주세요\");\n              navigation.navigate('SignInScreen');\n            }\n\n            if (error) {\n              alert(error);\n            }\n\n            _context.next = 39;\n            break;\n\n          case 35:\n            _context.prev = 35;\n            _context.t0 = _context[\"catch\"](20);\n            console.log(\"handleSignup error:\", _context.t0);\n            alert(\"이미 존재하는 이메일입니다\");\n\n          case 39:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[20, 35]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text_header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"\\uBE60\\uB974\\uAC8C \\uAC00\\uC785\\uD558\\uC138\\uC694!\")), React.createElement(Animatable.View, {\n    style: styles.footer,\n    animation: \"fadeInUpBig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text_footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), React.createElement(View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    style: styles.TextInput,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return handleEmailChange(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), React.createElement(Feather, {\n    name: \"check-circle\",\n    color: \"#1478FF\",\n    size: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: [styles.text_footer, {\n      marginTop: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uB984\"), React.createElement(View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    style: styles.TextInput,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return handleUsernameChange(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), React.createElement(Feather, {\n    name: \"check-circle\",\n    color: \"#1478FF\",\n    size: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: [styles.text_footer, {\n      marginTop: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"\\uD559\\uBC88\"), React.createElement(View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"\\uD559\\uBC88\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    style: styles.TextInput,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return handleNumberChange(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }), React.createElement(Feather, {\n    name: \"check-circle\",\n    color: \"#1478FF\",\n    size: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: [styles.text_footer, {\n      marginTop: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    style: styles.TextInput,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    size: 20,\n    onChangeText: function onChangeText(text) {\n      return handlePasswordChange(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }), React.createElement(Feather, {\n    name: \"check-circle\",\n    color: \"#1478FF\",\n    size: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: [styles.text_footer, {\n      marginTop: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), React.createElement(View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"\\uB2E4\\uC2DC \\uD55C\\uBC88 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    style: styles.TextInput,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return handleRepasswordChange(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), React.createElement(Feather, {\n    name: \"check-circle\",\n    color: \"#1478FF\",\n    size: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      handleSignup(data.email, data.username, data.number, data.password, data.repassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"\\uAC00\\uC785 \\uC2E0\\uCCAD\\uD558\\uAE30\"))))));\n};\n\nexport default SignUpScreen = function SignUpScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  console.log(\"SignUpScreen rendering\");\n  var client = new ApolloClient({\n    uri: \"http://52.251.50.212:4000/\",\n    cache: new InMemoryCache()\n  });\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, React.createElement(Main, {\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0A6EFF'\n  },\n  header: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 3,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 30\n  },\n  text_header: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  text_footer: {\n    color: '#1478FF',\n    fontSize: 18\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5\n  },\n  actionError: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#FF0000',\n    paddingBottom: 5\n  },\n  textInput: {\n    flex: 1,\n    marginTop: Platform.OS === 'ios' ? 0 : -12,\n    paddingLeft: 10,\n    width: \"90%\",\n    color: '#05375a',\n    fontSize: 17\n  },\n  errorMsg: {\n    color: '#FF0000',\n    fontSize: 14\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 20,\n    borderStyle: \"dashed\",\n    borderWidth: 1,\n    padding: 10,\n    width: \"80%\",\n    borderRadius: 10,\n    backgroundColor: \"#0A6EFF\",\n    borderColor: \"white\"\n  },\n  signIn: {\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  textSign: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/heejun/test0220/screens/SignUpScreen.js"],"names":["React","Animatable","Feather","ApolloClient","InMemoryCache","useQuery","ApolloProvider","useMutation","CREATE_ACCOUNT","DATABASE_URL","UserContext","EMAIL_RE","NUM_LEN","Main","navigation","useState","email","username","password","repassword","number","check_text","data","setData","createAccountMutation","handleEmailChange","val","handleUsernameChange","handlePasswordChange","handleRepasswordChange","handleNumberChange","handleSignup","test","Alert","alert","length","default_grade","variables","name","grade","loading","error","console","log","navigate","styles","container","header","text_header","footer","text_footer","action","TextInput","text","marginTop","alignItems","button","fontSize","color","SignUpScreen","client","uri","cache","StyleSheet","create","flex","backgroundColor","justifyContent","paddingHorizontal","paddingBottom","borderTopLeftRadius","borderTopRightRadius","paddingVertical","fontWeight","flexDirection","borderBottomWidth","borderBottomColor","actionError","textInput","Platform","OS","paddingLeft","width","errorMsg","borderStyle","borderWidth","padding","borderRadius","borderColor","signIn","height","textSign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    Button,\r\n    TouchableOpacity,\r\n    Dimensions,\r\n    TextInput,\r\n    Platform,\r\n    StyleSheet,\r\n    Alert,\r\n    ScrollView\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport { ApolloClient, InMemoryCache, useQuery, ApolloProvider, useMutation } from \"@apollo/client\";\r\nimport { CREATE_ACCOUNT, DATABASE_URL } from '../queries';\r\nimport { UserContext } from '../components/context';\r\n\r\nconst EMAIL_RE = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nconst NUM_LEN = 8; // 학번 길이\r\n\r\nconst Main = ({ navigation }) => {\r\n    const [data, setData] = React.useState({\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n        repassword: '',\r\n        number:'',\r\n        check_text: false,\r\n    });\r\n\r\n    const [createAccountMutation] = useMutation(CREATE_ACCOUNT);\r\n\r\n    const handleEmailChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            email: val\r\n        })\r\n    }\r\n    const handleUsernameChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            username: val\r\n        })\r\n    }\r\n    const handlePasswordChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            password: val\r\n        })\r\n    }\r\n    const handleRepasswordChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            repassword: val\r\n        })\r\n    }\r\n    const handleNumberChange = (val)=>{\r\n        setData({\r\n            ...data,\r\n            number: val\r\n        })\r\n    }\r\n\r\n\r\n    const handleSignup = async (email, username, number, password, repassword) => {\r\n        if (EMAIL_RE.test(email)==false){\r\n            Alert.alert(\"이메일 형식을 확인하세요\");\r\n        }else if (username == ''){\r\n            Alert.alert(\"이름을 입력하세요\");\r\n        }else if (number.length != NUM_LEN){\r\n            Alert.alert(\"학번을 확인하세요\");\r\n        }else if(password == ''){\r\n            Alert.alert(\"비밀번호를 입력하세요\");\r\n        }else if (password != repassword) {\r\n            Alert.alert(\"비밀번호를 확인해주세요\")\r\n        }else {\r\n            try {\r\n                let default_grade = 2;\r\n                const { data, loading, error } = await createAccountMutation({\r\n                    variables: {\r\n                        email: email,\r\n                        name: username,\r\n                        password: password,\r\n                        grade: default_grade,\r\n                        number: number\r\n                    }\r\n                })\r\n                console.log(\"data:\", data);\r\n                console.log(\"loading:\", loading);\r\n                console.log(\"error:\", error);\r\n                if (data) {\r\n                    alert(\"회원가입 성공! 다시 로그인해주세요\");\r\n                    navigation.navigate('SignInScreen');\r\n                }\r\n                if (error) {\r\n                    alert(error);\r\n                }\r\n            } catch (e) {\r\n                console.log(\"handleSignup error:\", e);\r\n                alert(\"이미 존재하는 이메일입니다\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Text style={styles.text_header}>빠르게 가입하세요!</Text>\r\n            </View>\r\n            <Animatable.View style={styles.footer} animation=\"fadeInUpBig\">\r\n                <ScrollView>\r\n                <Text style={styles.text_footer}>이메일</Text>\r\n                <View style={styles.action}>\r\n                    <TextInput\r\n                        placeholder=\"이메일을 입력하세요\"\r\n                        style={styles.TextInput}\r\n                        autoCapitalize=\"none\"\r\n                        onChangeText={(text) => handleEmailChange(text)}\r\n                    ></TextInput>\r\n                    <Feather name=\"check-circle\" color=\"#1478FF\" size={2} />\r\n                </View>\r\n                <Text style={[styles.text_footer, { marginTop: 20 }]}>이름</Text>\r\n                <View style={styles.action}>\r\n                    <TextInput\r\n                        placeholder=\"이름을 입력하세요\"\r\n                        style={styles.TextInput}\r\n                        autoCapitalize=\"none\"\r\n                        onChangeText={(text) => handleUsernameChange(text)}\r\n                    ></TextInput>\r\n                    <Feather name=\"check-circle\" color=\"#1478FF\" size={2} />\r\n                </View>\r\n                <Text style={[styles.text_footer, { marginTop: 20 }]}>학번</Text>\r\n                <View style={styles.action}>\r\n                    <TextInput\r\n                        placeholder=\"학번을 입력하세요\"\r\n                        style={styles.TextInput}\r\n                        autoCapitalize=\"none\"\r\n                        onChangeText={(text) => handleNumberChange(text)}\r\n                    ></TextInput>\r\n                    <Feather name=\"check-circle\" color=\"#1478FF\" size={2} />\r\n                </View>\r\n                <Text style={[styles.text_footer, { marginTop: 20 }]}>비밀번호</Text>\r\n                <View style={styles.action}>\r\n                    <TextInput\r\n                        placeholder=\"비밀번호를 입력하세요\"\r\n                        style={styles.TextInput}\r\n                        autoCapitalize=\"none\"\r\n                        secureTextEntry={true}\r\n                        size={20}\r\n                        onChangeText={(text) => handlePasswordChange(text)}\r\n                    ></TextInput>\r\n                    <Feather name=\"check-circle\" color=\"#1478FF\" size={2} />\r\n                </View>\r\n                <Text style={[styles.text_footer, { marginTop: 20 }]}>비밀번호 확인</Text>\r\n                <View style={styles.action}>\r\n                    <TextInput\r\n                        placeholder=\"다시 한번 비밀번호를 입력하세요\"\r\n                        style={styles.TextInput}\r\n                        autoCapitalize=\"none\"\r\n                        secureTextEntry={true}\r\n                        onChangeText={(text) => handleRepasswordChange(text)}\r\n                    ></TextInput>\r\n                    <Feather name=\"check-circle\" color=\"#1478FF\" size={2} />\r\n                </View>\r\n                <View style={{alignItems:\"center\"}}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => {\r\n                        handleSignup(data.email, data.username, data.number, data.password, data.repassword);\r\n                    }}>\r\n                        <Text style={{ fontSize: 20, color: \"white\" }}>가입 신청하기</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                </ScrollView>\r\n            </Animatable.View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SignUpScreen = ({ navigation }) => {\r\n    console.log(\"SignUpScreen rendering\");\r\n    const client = new ApolloClient({\r\n        uri: \"http://52.251.50.212:4000/\",\r\n        cache: new InMemoryCache(),\r\n    });\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Main navigation={navigation} />\r\n        </ApolloProvider>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#0A6EFF'\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 50\r\n    },\r\n    footer: {\r\n        flex: 3,\r\n        backgroundColor: '#fff',\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 30\r\n    },\r\n    text_header: {\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        fontSize: 30\r\n    },\r\n    text_footer: {\r\n        color: '#1478FF',\r\n        fontSize: 18\r\n    },\r\n    action: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#f2f2f2',\r\n        paddingBottom: 5\r\n    },\r\n    actionError: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#FF0000',\r\n        paddingBottom: 5\r\n    },\r\n    textInput: {\r\n        flex: 1,\r\n        marginTop: Platform.OS === 'ios' ? 0 : -12,\r\n        paddingLeft: 10,\r\n        width: \"90%\",\r\n        color: '#05375a',\r\n        fontSize: 17,\r\n    },\r\n    errorMsg: {\r\n        color: '#FF0000',\r\n        fontSize: 14,\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        marginTop: 20,\r\n        borderStyle: \"dashed\",\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        width: \"80%\",\r\n        borderRadius: 10,\r\n        backgroundColor: \"#0A6EFF\",\r\n        borderColor: \"white\"\r\n    },\r\n    signIn: {\r\n        width: '100%',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}