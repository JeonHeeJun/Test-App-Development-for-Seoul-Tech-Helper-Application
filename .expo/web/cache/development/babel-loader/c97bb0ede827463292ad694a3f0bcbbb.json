{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\heejun\\\\test0220\\\\screens\\\\KeepScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext, useRef, useCallback, Fragment, useReducer } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { colors, Header } from 'react-native-elements';\nimport { ApolloClient, ApolloProvider, InMemoryCache, useQuery, useLazyQuery, createHttpLink, useMutation } from \"@apollo/client\";\nimport Modal from 'react-native-modal';\nimport { GET_CONTINENTS, GET_CONTINENT, SEE_REGIST_LECTURE, GET_USERID } from \"../queries\";\nimport { Appbar } from 'react-native-paper';\nimport { createNavigatorFactory, NavigationContainer, useNavigationBuilder } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator, HeaderBackButton } from '@react-navigation/stack';\nimport { Ionicons, FontAwesome, AntDesign, Entypo, Feather, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AuthContext, UserContext, IdContext, MemoContext } from \"../components/context\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport HomeScreen from \"./HomeScreen\";\nimport ScheduleScreen from \"./ScheduleScreen\";\nimport { SEE_ALL_POSTERS, POST_VIEW, POST_UPLOAD, POST_DELETE, POST_LOAD, COMMENT_UPLOAD, COMMENT_DELETE, POST_INFO } from \"../queries\";\nimport { valueFromAST } from 'graphql';\nimport { KeyboardAwareScrollView, KeyboardAwareFlatList } from 'react-native-keyboard-aware-scroll-view';\nimport { ScreenStackHeaderLeftView } from 'react-native-screens';\nimport HyperlinkedText from 'react-native-hyperlinked-text';\nimport Menu, { MenuItem, MenuDivider } from 'react-native-material-menu';\nimport { setStatusBarNetworkActivityIndicatorVisible } from 'expo-status-bar';\nimport { set } from 'react-native-reanimated';\nimport { useIsFocused } from '@react-navigation/native';\nvar KeepData = null;\nvar titleLen = 100;\nvar textLen = 1000;\nvar checkLen = 500;\nvar realMemoLen = 0;\n\nvar areEqual = function areEqual(prevProps, nextProps) {\n  console.log(\"areequal!!!!!!!!!!!!!!!!1\", nextProps.memo.index);\n  return JSON.stringify(prevProps.memo.item) === JSON.stringify(nextProps.memo.item) && prevProps.memo.index === nextProps.memo.index;\n};\n\nfunction useForceUpdate() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      setTick = _useState2[1];\n\n  var update = useCallback(function () {\n    setTick(function (tick) {\n      return tick + 1;\n    });\n  }, []);\n  return update;\n}\n\nvar MemoPrint = React.memo(function (_ref) {\n  var memo = _ref.memo,\n      navigation = _ref.navigation;\n  return React.createElement(TouchableOpacity, {\n    style: styles.card,\n    onPress: function onPress() {\n      checklist = memo.item.checklist.slice();\n      navigation.navigate(\"keepUpload\", {\n        mode: memo.index,\n        initText: memo.item.text,\n        initTitle: memo.item.title,\n        initButton: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 2,\n    style: {\n      fontSize: 23\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, memo.item.title), React.createElement(Text, {\n    numberOfLines: 3,\n    style: {\n      fontSize: 17\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, memo.item.text), memo.item.checklist.length > 6 ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, memo.item.checklist.slice(0, 6).map(function (check) {\n    return React.createElement(CheckPrint, {\n      memo: check,\n      key: check.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 56\n      }\n    });\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"...\")) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, memo.item.checklist.map(function (check) {\n    return React.createElement(CheckPrint, {\n      memo: check,\n      key: check.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 43\n      }\n    });\n  })));\n}, areEqual);\nvar CheckPrint = React.memo(function (_ref2) {\n  var memo = _ref2.memo;\n  console.log(\"checkPrint!!!!!!!!!1\", memo);\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 10,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, memo.toggle ? React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Feather, {\n    style: {\n      width: '7%'\n    },\n    name: \"check-circle\",\n    size: 17,\n    color: \"gray\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      textDecorationLine: 'line-through',\n      width: '93%',\n      fontSize: 17,\n      color: 'gray'\n    },\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, memo.text)) : React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(Entypo, {\n    style: {\n      width: '7%'\n    },\n    name: \"circle\",\n    size: 17,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      width: '93%',\n      fontSize: 17,\n      color: 'black'\n    },\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, memo.text)));\n});\nexport var KeepScreen = function KeepScreen(_ref3) {\n  var route = _ref3.route,\n      navigation = _ref3.navigation;\n  var update = useForceUpdate();\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      update();\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return React.createElement(KeepContent, {\n    navigation: navigation,\n    reload: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 3\n    }\n  });\n};\nvar refresh = false;\nexport var KeepContent = function KeepContent(_ref4) {\n  var reload = _ref4.reload,\n      navigation = _ref4.navigation;\n  var update = useForceUpdate();\n  var writeData = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('MEMO', JSON.stringify(KeepData)));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  });\n  var readData = useCallback(function _callee2() {\n    var userMemo;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"MEMO\"));\n\n          case 3:\n            userMemo = _context2.sent;\n\n            if (userMemo !== null) {\n              KeepData = JSON.parse(userMemo);\n              update();\n            } else {\n              KeepData = [];\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            alert('Failed to fetch the data from storage');\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  });\n  useEffect(function () {\n    if (KeepData == null) {\n      readData();\n    } else {\n      if (refresh) {\n        refresh = false;\n        writeData();\n      }\n\n      update();\n    }\n  }, [refresh]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, KeepData == null ? null : React.createElement(FlatList, {\n    data: KeepData,\n    keyExtractor: function keyExtractor(memo) {\n      return memo.id.toString();\n    },\n    renderItem: function renderItem(memo) {\n      return React.createElement(MemoPrint, {\n        memo: memo,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 18\n        }\n      });\n    },\n    windowSize: 2,\n    onEndReached: function onEndReached() {},\n    onEndReachedThreshold: 0.1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      position: 'absolute',\n      bottom: 10,\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"\\uCCB4\\uD06C\\uB9AC\\uC2A4\\uD2B8 \\uCD94\\uAC00\",\n    onPress: function onPress() {\n      checklist = [];\n      navigation.navigate(\"keepUpload\", {\n        mode: \"write\",\n        initText: \"\",\n        initTitle: \"\",\n        initButton: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  })));\n};\nvar checklist = [];\nvar HeaderComponent = React.memo(function (_ref5) {\n  var route = _ref5.route,\n      navigation = _ref5.navigation;\n\n  var _useState3 = useState(route.params.initTitle),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(route.params.initText),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState(route.params.initButton),\n      _useState8 = _slicedToArray(_useState7, 2),\n      preventUp = _useState8[0],\n      setPreventUp = _useState8[1];\n\n  var _useState9 = useState(route.params.initButton),\n      _useState10 = _slicedToArray(_useState9, 2),\n      preventDel = _useState10[0],\n      setPreventDel = _useState10[1];\n\n  var update = useForceUpdate();\n  React.useEffect(function () {\n    if (preventUp) {\n      if (KeepData.length >= 100) Alert.alert(\"\", \"메모가 너무 많습니다. 더 이상 메모를 만들 수 없습니다.\");else {\n        if (route.params.mode == \"write\") {\n          var today = new Date().getTime();\n          KeepData.push({\n            id: today,\n            title: title,\n            text: text,\n            checklist: checklist\n          });\n        } else {\n          var tempid = KeepData[route.params.mode].id;\n          KeepData[route.params.mode] = {\n            id: tempid,\n            title: title,\n            text: text,\n            checklist: checklist.slice()\n          };\n        }\n      }\n      checklist = [];\n      refresh = true;\n      navigation.goBack();\n    }\n\n    if (preventDel) {\n      KeepData.splice(route.params.mode, 1);\n      checklist = [];\n      refresh = true;\n      navigation.goBack();\n    }\n  }, [preventUp, preventDel]);\n  return React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: 40,\n      marginHorizontal: 10,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'center'\n    },\n    onPress: function onPress() {\n      checklist = [];\n      navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"closecircle\",\n    size: 30,\n    color: \"dodgerblue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 14\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, \"\\uCCB4\\uD06C\\uB9AC\\uC2A4\\uD2B8 \\uCD94\\uAC00\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }, route.params.mode != \"write\" ? React.createElement(View, {\n    style: {\n      marginHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"\\uC0AD\\uC81C\",\n    disabled: preventDel,\n    onPress: function onPress() {\n      if (!preventDel) setPreventDel(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  })) : null, React.createElement(Button, {\n    title: \"\\uC800\\uC7A5\",\n    disabled: preventUp,\n    onPress: function onPress() {\n      if (!preventUp) setPreventUp(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: {\n      margin: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      textAlignVertical: \"top\",\n      fontSize: 20\n    },\n    placeholder: \"\\uC81C\\uBAA9\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return setTitle(val);\n    },\n    value: title,\n    maxLength: titleLen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      marginHorizontal: 10,\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 10\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      textAlignVertical: \"top\",\n      fontSize: 20\n    },\n    placeholder: \"\\uB0B4\\uC6A9\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return setText(val);\n    },\n    multiline: true,\n    scrollEnabled: false,\n    blurOnSubmit: true,\n    numberOfLines: 2,\n    maxLength: textLen,\n    value: text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  })));\n});\nexport var KeepUpload = function KeepUpload(_ref6) {\n  var route = _ref6.route,\n      navigation = _ref6.navigation;\n  var update = useForceUpdate();\n  return React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    removeClippedSubviews: false,\n    style: {\n      flex: 1\n    },\n    keyExtractor: function keyExtractor(memo) {\n      return memo.id.toString();\n    },\n    data: checklist,\n    renderItem: function renderItem(memo) {\n      return React.createElement(ListItem, {\n        memo: memo,\n        reload: update,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 12\n        }\n      });\n    },\n    windowSize: 2,\n    onEndReached: function onEndReached() {},\n    onEndReachedThreshold: 0.1,\n    ListHeaderComponent: React.createElement(HeaderComponent, {\n      route: _objectSpread({}, route),\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: {\n      justifyContent: 'flex-end',\n      margin: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 6\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var today = new Date().getTime();\n      if (checklist.length >= 50) Alert.alert(\"\", \"체크리스트가 너무 많습니다. 더 이상 체크리스트를 만들 수 없습니다.\");else {\n        checklist.push({\n          id: today,\n          text: \"\",\n          toggle: false\n        });\n        update();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 5\n    }\n  }, React.createElement(AntDesign, {\n    name: \"plussquareo\",\n    size: 30,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 8\n    }\n  })))));\n};\nvar ListItem = React.memo(function (_ref7) {\n  var memo = _ref7.memo,\n      reload = _ref7.reload;\n\n  var _useState11 = useState(memo.item.toggle),\n      _useState12 = _slicedToArray(_useState11, 2),\n      toggle = _useState12[0],\n      setToggle = _useState12[1];\n\n  var _useState13 = useState(memo.item.text),\n      _useState14 = _slicedToArray(_useState13, 2),\n      text = _useState14[0],\n      setText = _useState14[1];\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 15,\n      marginHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (toggle) {\n        checklist[memo.index] = {\n          id: memo.item.id,\n          text: text,\n          toggle: false\n        };\n        setToggle(false);\n      } else {\n        checklist[memo.index] = {\n          id: memo.item.id,\n          text: text,\n          toggle: true\n        };\n        setToggle(true);\n      }\n    },\n    style: {\n      flex: 0.1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 3\n    }\n  }, toggle ? React.createElement(Feather, {\n    name: \"check-circle\",\n    size: 24,\n    color: \"gray\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 3\n    }\n  }) : React.createElement(Entypo, {\n    name: \"circle\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 3\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 3\n    }\n  }, toggle ? React.createElement(Text, {\n    style: {\n      textDecorationLine: 'line-through',\n      color: 'gray',\n      fontSize: 20,\n      width: '90%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 3\n    }\n  }, text) : React.createElement(TextInput, {\n    style: {\n      fontSize: 20\n    },\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    multiline: true,\n    scrollEnabled: false,\n    blurOnSubmit: true,\n    value: text,\n    keyboardDismissMode: \"none\",\n    removeClippedSubviews: false,\n    onChangeText: function onChangeText(val) {\n      checklist[memo.index] = {\n        id: memo.item.id,\n        text: val,\n        toggle: toggle\n      };\n      setText(val);\n    },\n    maxLength: checkLen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 3\n    }\n  }))), React.createElement(View, {\n    style: {\n      width: '7%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 3\n    }\n  }, toggle ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      checklist.splice(memo.index, 1);\n      reload();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 4\n    }\n  }, React.createElement(AntDesign, {\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 5\n    }\n  })) : null));\n}, areEqual);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start'\n  },\n  item: {\n    width: '50%'\n  },\n  card: {\n    backgroundColor: \"white\",\n    padding: 10,\n    margin: 1,\n    borderWidth: 1,\n    borderColor: \"#dcdcdc\",\n    borderRadius: 5,\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/heejun/test0220/screens/KeepScreen.js"],"names":["React","useState","useEffect","useContext","useRef","useCallback","Fragment","useReducer","colors","Header","ApolloClient","ApolloProvider","InMemoryCache","useQuery","useLazyQuery","createHttpLink","useMutation","Modal","GET_CONTINENTS","GET_CONTINENT","SEE_REGIST_LECTURE","GET_USERID","Appbar","createNavigatorFactory","NavigationContainer","useNavigationBuilder","createBottomTabNavigator","createStackNavigator","HeaderBackButton","Ionicons","FontAwesome","AntDesign","Entypo","Feather","MaterialCommunityIcons","AuthContext","UserContext","IdContext","MemoContext","AsyncStorage","HomeScreen","ScheduleScreen","SEE_ALL_POSTERS","POST_VIEW","POST_UPLOAD","POST_DELETE","POST_LOAD","COMMENT_UPLOAD","COMMENT_DELETE","POST_INFO","valueFromAST","KeyboardAwareScrollView","KeyboardAwareFlatList","ScreenStackHeaderLeftView","HyperlinkedText","Menu","MenuItem","MenuDivider","setStatusBarNetworkActivityIndicatorVisible","set","useIsFocused","KeepData","titleLen","textLen","checkLen","realMemoLen","areEqual","prevProps","nextProps","console","log","memo","index","JSON","stringify","item","useForceUpdate","setTick","update","tick","MemoPrint","navigation","styles","card","checklist","slice","navigate","mode","initText","text","initTitle","title","initButton","fontSize","length","map","check","id","CheckPrint","flexDirection","marginTop","justifyContent","toggle","width","textDecorationLine","color","KeepScreen","route","unsubscribe","addListener","refresh","KeepContent","reload","writeData","setItem","readData","getItem","userMemo","parse","alert","flex","toString","borderWidth","position","bottom","alignSelf","HeaderComponent","params","setTitle","setText","preventUp","setPreventUp","preventDel","setPreventDel","Alert","today","Date","getTime","push","tempid","goBack","splice","marginHorizontal","marginLeft","margin","textAlignVertical","val","KeepUpload","Platform","OS","ListItem","setToggle","StyleSheet","create","container","flexWrap","alignItems","backgroundColor","padding","borderColor","borderRadius","textAlign"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAgDC,MAAhD,EAAwDC,WAAxD,EAAoEC,QAApE,EAA8EC,UAA9E,QAAgG,OAAhG;;;;;;;;;;;;;;;;AAIA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,uBAA7B;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,EAAsDC,QAAtD,EAA+DC,YAA/D,EAA8EC,cAA9E,EAA8FC,WAA9F,QAAgH,gBAAhH;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,kBAAxC,EAA4DC,UAA5D;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,EAAsDC,oBAAtD,QAAkF,0BAAlF;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,EAA8BC,gBAA9B,QAAsD,yBAAtD;AAEA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA0CC,MAA1C,EAAiDC,OAAjD,EAAyDC,sBAAzD,QAAwF,oBAAxF;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAkCC,SAAlC,EAA6CC,WAA7C;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,SAAQC,eAAR,EAAwBC,SAAxB,EAAkCC,WAAlC,EAA8CC,WAA9C,EAA0DC,SAA1D,EAAoEC,cAApE,EAAmFC,cAAnF,EAAkGC,SAAlG;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,uBAAT,EAAkCC,qBAAlC,QAA+D,yCAA/D;AAEA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AAEA,OAAOC,IAAP,IAAcC,QAAd,EAAwBC,WAAxB,QAA0C,4BAA1C;AACA,SAASC,2CAAT,QAA4D,iBAA5D;AACA,SAASC,GAAT,QAAoB,yBAApB;AAEA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAKA,IAAMC,QAAQ,GAAG,GAAjB;AACA,IAAMC,OAAO,GAAG,IAAhB;AACA,IAAMC,QAAQ,GAAG,GAAjB;AACA,IAAMC,WAAW,GAAG,CAApB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCF,SAAS,CAACG,IAAV,CAAeC,KAAvD;AACA,SAAQC,IAAI,CAACC,SAAL,CAAeP,SAAS,CAACI,IAAV,CAAeI,IAA9B,MAAwCF,IAAI,CAACC,SAAL,CAAeN,SAAS,CAACG,IAAV,CAAeI,IAA9B,CAAxC,IAERR,SAAS,CAACI,IAAV,CAAeC,KAAf,KAAyBJ,SAAS,CAACG,IAAV,CAAeC,KAFxC;AAKD,CAPD;;AAUA,SAASI,cAAT,GAA0B;AAAA,kBACJ3E,QAAQ,CAAC,CAAD,CADJ;AAAA;AAAA,MACf4E,OADe;;AAExB,MAAMC,MAAM,GAAGzE,WAAW,CAAC,YAAM;AAC/BwE,IAAAA,OAAO,CAAC,UAAAE,IAAI;AAAA,aAAIA,IAAI,GAAG,CAAX;AAAA,KAAL,CAAP;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,SAAOD,MAAP;AACD;;AAED,IAAME,SAAS,GAAGhF,KAAK,CAACuE,IAAN,CAAW,gBAAsB;AAAA,MAApBA,IAAoB,QAApBA,IAAoB;AAAA,MAAfU,UAAe,QAAfA,UAAe;AAMnD,SAEA,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,IADhB;AAEE,IAAA,OAAO,EAAG,mBAAI;AACZC,MAAAA,SAAS,GAACb,IAAI,CAACI,IAAL,CAAUS,SAAV,CAAoBC,KAApB,EAAV;AAKAJ,MAAAA,UAAU,CAACK,QAAX,CAAoB,YAApB,EAAiC;AAACC,QAAAA,IAAI,EAAChB,IAAI,CAACC,KAAX;AACjCgB,QAAAA,QAAQ,EAACjB,IAAI,CAACI,IAAL,CAAUc,IADc;AACRC,QAAAA,SAAS,EAACnB,IAAI,CAACI,IAAL,CAAUgB,KADZ;AACmBC,QAAAA,UAAU,EAAG;AADhC,OAAjC;AAID,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CtB,IAAI,CAACI,IAAL,CAAUgB,KAAzD,CAfJ,EAgBI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAC;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CtB,IAAI,CAACI,IAAL,CAAUc,IAAzD,CAhBJ,EAiBSlB,IAAI,CAACI,IAAL,CAAUS,SAAV,CAAoBU,MAApB,GAA6B,CAA7B,GACD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,IAAI,CAACI,IAAL,CAAUS,SAAV,CAAoBC,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,EAA+BU,GAA/B,CAAmC,UAACC,KAAD;AAAA,WAAS,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,KAAlB;AAAyB,MAAA,GAAG,EAAEA,KAAK,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AAAA,GAAnC,CADH,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADC,GAMD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC1B,IAAI,CAACI,IAAL,CAAUS,SAAV,CAAoBW,GAApB,CAAwB,UAACC,KAAD;AAAA,WAAS,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,KAAlB;AAAyB,MAAA,GAAG,EAAEA,KAAK,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AAAA,GAAxB,CADD,CAvBR,CAFA;AAgCC,CAtCiB,EAsChB/B,QAtCgB,CAAlB;AA0CA,IAAMgC,UAAU,GAAGlG,KAAK,CAACuE,IAAN,CAAW,iBAAU;AAAA,MAARA,IAAQ,SAARA,IAAQ;AACtCF,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCC,IAAnC;AACA,SAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC4B,MAAAA,aAAa,EAAC,KAAf;AAAsBC,MAAAA,SAAS,EAAC,EAAhC;AAAmCC,MAAAA,cAAc,EAAC;AAAlD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK9B,IAAI,CAAC+B,MAAL,GACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAhB;AAA+B,IAAA,IAAI,EAAC,cAApC;AAAmD,IAAA,IAAI,EAAE,EAAzD;AAA6D,IAAA,KAAK,EAAC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,kBAAkB,EAAC,cAApB;AAAmCD,MAAAA,KAAK,EAAC,KAAzC;AAA+CV,MAAAA,QAAQ,EAAC,EAAxD;AAA2DY,MAAAA,KAAK,EAAC;AAAjE,KAAb;AAAwF,IAAA,aAAa,EAAE,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4GlC,IAAI,CAACkB,IAAjH,CAFA,CADC,GAMD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACc,MAAAA,KAAK,EAAC;AAAP,KAAf;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAA2C,IAAA,IAAI,EAAE,EAAjD;AAAqD,IAAA,KAAK,EAAC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAC,KAAP;AAAaV,MAAAA,QAAQ,EAAC,EAAtB;AAA0BY,MAAAA,KAAK,EAAC;AAAhC,KAAb;AAAuD,IAAA,aAAa,EAAE,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0ElC,IAAI,CAACkB,IAA/E,CAFA,CATJ,CAHF;AAuBD,CAzBkB,CAAnB;AA2BA,OAAO,IAAMiB,UAAU,GAAG,SAAbA,UAAa,QAAsB;AAAA,MAApBC,KAAoB,SAApBA,KAAoB;AAAA,MAAd1B,UAAc,SAAdA,UAAc;AAC9C,MAAMH,MAAM,GAAGF,cAAc,EAA7B;AAcA1E,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAM0G,WAAW,GAAG3B,UAAU,CAAC4B,WAAX,CAAuB,OAAvB,EAAgC,YAAM;AACxD/B,MAAAA,MAAM;AACP,KAFmB,CAApB;AAGA,WAAO8B,WAAP;AACD,GALQ,EAKP,CAAC3B,UAAD,CALO,CAAT;AAQA,SACA,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEA,UAAzB;AAAqC,IAAA,MAAM,EAAEH,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAID,CA3BM;AA6BP,IAAIgC,OAAO,GAAG,KAAd;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAAyB;AAAA,MAAvBC,MAAuB,SAAvBA,MAAuB;AAAA,MAAhB/B,UAAgB,SAAhBA,UAAgB;AAClD,MAAMH,MAAM,GAAGF,cAAc,EAA7B;AAIA,MAAMqC,SAAS,GAAG5G,WAAW,CAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAIrBkC,YAAY,CAAC2E,OAAb,CAAqB,MAArB,EAA6BzC,IAAI,CAACC,SAAL,CAAeb,QAAf,CAA7B,CAJqB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAM3BQ,YAAAA,OAAO,CAACC,GAAR;;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,CAA7B;AAWA,MAAM6C,QAAQ,GAAG9G,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEFkC,YAAY,CAAC6E,OAAb,CAAqB,MAArB,CAFE;;AAAA;AAEnBC,YAAAA,QAFmB;;AAIzB,gBAAIA,QAAQ,KAAK,IAAjB,EAAuB;AAErBxD,cAAAA,QAAQ,GAAGY,IAAI,CAAC6C,KAAL,CAAWD,QAAX,CAAX;AAEAvC,cAAAA,MAAM;AACP,aALD,MAMI;AAEFjB,cAAAA,QAAQ,GAAG,EAAX;AACD;;AAbwB;AAAA;;AAAA;AAAA;AAAA;AAezBQ,YAAAA,OAAO,CAACC,GAAR;AACAiD,YAAAA,KAAK,CAAC,uCAAD,CAAL;;AAhByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAA5B;AAqBArH,EAAAA,SAAS,CAAC,YAAI;AAEZ,QAAG2D,QAAQ,IAAI,IAAf,EAAoB;AAElBsD,MAAAA,QAAQ;AAET,KAJD,MAKI;AACF,UAAGL,OAAH,EAAW;AACTA,QAAAA,OAAO,GAAG,KAAV;AACAG,QAAAA,SAAS;AACV;;AACDnC,MAAAA,MAAM;AACP;AACF,GAdQ,EAcP,CAACgC,OAAD,CAdO,CAAT;AAmBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACU,MAAAA,IAAI,EAAC;AAAN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI3D,QAAQ,IAAI,IAAZ,GACD,IADC,GAGF,oBAAC,QAAD;AACE,IAAA,IAAI,EAAIA,QADV;AAEE,IAAA,YAAY,EAAE,sBAACU,IAAD;AAAA,aAAQA,IAAI,CAAC0B,EAAL,CAAQwB,QAAR,EAAR;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAI,oBAAClD,IAAD,EAAU;AAEtB,aAAO,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,IAAjB;AAAuB,QAAA,UAAU,EAAEU,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KANH;AAOE,IAAA,UAAU,EAAE,CAPd;AAQE,IAAA,YAAY,EAAE,wBAAI,CAEjB,CAVH;AAYC,IAAA,qBAAqB,EAAE,GAZxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAmBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACyC,MAAAA,WAAW,EAAC,CAAb;AAAeC,MAAAA,QAAQ,EAAC,UAAxB;AAAmCC,MAAAA,MAAM,EAAC,EAA1C;AAA6CC,MAAAA,SAAS,EAAC;AAAvD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,6CAAd;AAAyB,IAAA,OAAO,EAAE,mBAAI;AACpCzC,MAAAA,SAAS,GAAC,EAAV;AAEAH,MAAAA,UAAU,CAACK,QAAX,CAAoB,YAApB,EAAiC;AAACC,QAAAA,IAAI,EAAC,OAAN;AAAeC,QAAAA,QAAQ,EAAC,EAAxB;AAA4BE,QAAAA,SAAS,EAAC,EAAtC;AAAyCE,QAAAA,UAAU,EAAG;AAAtD,OAAjC;AAA+F,KAHjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CADF;AA4BD,CApFM;AAwFP,IAAIR,SAAS,GAAG,EAAhB;AAIA,IAAM0C,eAAe,GAAG9H,KAAK,CAACuE,IAAN,CAAW,iBAAwB;AAAA,MAAtBoC,KAAsB,SAAtBA,KAAsB;AAAA,MAAf1B,UAAe,SAAfA,UAAe;;AAAA,mBAEhChF,QAAQ,CAAC0G,KAAK,CAACoB,MAAN,CAAarC,SAAd,CAFwB;AAAA;AAAA,MAElDC,KAFkD;AAAA,MAE5CqC,QAF4C;;AAAA,mBAGjC/H,QAAQ,CAAC0G,KAAK,CAACoB,MAAN,CAAavC,QAAd,CAHyB;AAAA;AAAA,MAGlDC,IAHkD;AAAA,MAG5CwC,OAH4C;;AAAA,mBAIvBhI,QAAQ,CAAC0G,KAAK,CAACoB,MAAN,CAAanC,UAAd,CAJe;AAAA;AAAA,MAIlDsC,SAJkD;AAAA,MAIvCC,YAJuC;;AAAA,mBAKrBlI,QAAQ,CAAC0G,KAAK,CAACoB,MAAN,CAAanC,UAAd,CALa;AAAA;AAAA,MAKlDwC,UALkD;AAAA,MAKtCC,aALsC;;AAMzD,MAAMvD,MAAM,GAAGF,cAAc,EAA7B;AAGA5E,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAI;AAElB,QAAGgI,SAAH,EAAa;AACX,UAAIrE,QAAQ,CAACiC,MAAV,IAAqB,GAAxB,EAA6BwC,KAAK,CAACf,KAAN,CAAY,EAAZ,EAAe,kCAAf,EAA7B,KACI;AACF,YAAGZ,KAAK,CAACoB,MAAN,CAAaxC,IAAb,IAAqB,OAAxB,EAAgC;AAC9B,cAAIgD,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA5E,UAAAA,QAAQ,CAAC6E,IAAT,CAAc;AAACzC,YAAAA,EAAE,EAACsC,KAAJ;AAAW5C,YAAAA,KAAK,EAACA,KAAjB;AAAwBF,YAAAA,IAAI,EAACA,IAA7B;AAAmCL,YAAAA,SAAS,EAAGA;AAA/C,WAAd;AAGD,SALD,MAMI;AAIF,cAAIuD,MAAM,GAAE9E,QAAQ,CAAC8C,KAAK,CAACoB,MAAN,CAAaxC,IAAd,CAAR,CAA4BU,EAAxC;AAKApC,UAAAA,QAAQ,CAAC8C,KAAK,CAACoB,MAAN,CAAaxC,IAAd,CAAR,GAA6B;AAACU,YAAAA,EAAE,EAAC0C,MAAJ;AAAYhD,YAAAA,KAAK,EAACA,KAAlB;AAAyBF,YAAAA,IAAI,EAAEA,IAA/B;AAAqCL,YAAAA,SAAS,EAACA,SAAS,CAACC,KAAV;AAA/C,WAA7B;AAEC;AACJ;AACDD,MAAAA,SAAS,GAAG,EAAZ;AAGA0B,MAAAA,OAAO,GAAG,IAAV;AAEA7B,MAAAA,UAAU,CAAC2D,MAAX;AACD;;AAED,QAAGR,UAAH,EAAc;AAMZvE,MAAAA,QAAQ,CAACgF,MAAT,CAAgBlC,KAAK,CAACoB,MAAN,CAAaxC,IAA7B,EAAkC,CAAlC;AACAH,MAAAA,SAAS,GAAC,EAAV;AAGA0B,MAAAA,OAAO,GAAG,IAAV;AAEA7B,MAAAA,UAAU,CAAC2D,MAAX;AAED;AACF,GA/CD,EA+CE,CAACV,SAAD,EAAWE,UAAX,CA/CF;AAkDA,SACM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACZ,MAAAA,IAAI,EAAC,CAAN;AAASpB,MAAAA,SAAS,EAAC,EAAnB;AAAuB0C,MAAAA,gBAAgB,EAAC,EAAxC;AAA4C3C,MAAAA,aAAa,EAAC,KAA1D;AAAgEE,MAAAA,cAAc,EAAC;AAA/E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACF,MAAAA,aAAa,EAAE;AAAhB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAmB,IAAA,KAAK,EAAE;AAAC0B,MAAAA,SAAS,EAAC;AAAX,KAA1B;AACA,IAAA,OAAO,EAAG,mBAAI;AACZzC,MAAAA,SAAS,GAAG,EAAZ;AAICH,MAAAA,UAAU,CAAC2D,MAAX;AAAoB,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,KAAK,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,CADA,EAWF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC/C,MAAAA,QAAQ,EAAC,EAAV;AAAckD,MAAAA,UAAU,EAAC;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAXE,CADF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC5C,MAAAA,aAAa,EAAC;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEQ,KAAK,CAACoB,MAAN,CAAaxC,IAAb,IAAqB,OAArB,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACuD,MAAAA,gBAAgB,EAAC;AAAlB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,cADN;AAEA,IAAA,QAAQ,EAAGV,UAFX;AAGA,IAAA,OAAO,EAAE,mBAAK;AACZ,UAAG,CAACA,UAAJ,EAAgBC,aAAa,CAAC,IAAD,CAAb;AACjB,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADE,GAUD,IAXD,EAaA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AACA,IAAA,QAAQ,EAAEH,SADV;AAEA,IAAA,OAAO,EAAE,mBAAK;AACZ,UAAG,CAACA,SAAJ,EAAeC,YAAY,CAAC,IAAD,CAAZ;AAChB,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,CAdF,CADA,EAmCA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACa,MAAAA,MAAM,EAAC;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACM,IAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAE,KADd;AAELpD,MAAAA,QAAQ,EAAG;AAFN,KADb;AAKE,IAAA,WAAW,EAAC,cALd;AAME,IAAA,cAAc,EAAC,MANjB;AAOE,IAAA,YAAY,EAAE,sBAACqD,GAAD;AAAA,aAAOlB,QAAQ,CAACkB,GAAD,CAAf;AAAA,KAPhB;AAQE,IAAA,KAAK,EAAEvD,KART;AASE,IAAA,SAAS,EAAE7B,QATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAnCA,EAgDC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACgF,MAAAA,gBAAgB,EAAC,EAAlB;AAAsB1C,MAAAA,SAAS,EAAC;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,SAAD;AACM,IAAA,KAAK,EAAE;AACL6C,MAAAA,iBAAiB,EAAE,KADd;AAELpD,MAAAA,QAAQ,EAAG;AAFN,KADb;AAKE,IAAA,WAAW,EAAC,cALd;AAME,IAAA,cAAc,EAAC,MANjB;AAOE,IAAA,YAAY,EAAE,sBAACqD,GAAD;AAAA,aAAOjB,OAAO,CAACiB,GAAD,CAAd;AAAA,KAPhB;AAQE,IAAA,SAAS,EAAE,IARb;AASE,IAAA,aAAa,EAAE,KATjB;AAUE,IAAA,YAAY,EAAE,IAVhB;AAWE,IAAA,aAAa,EAAE,CAXjB;AAYE,IAAA,SAAS,EAAEnF,OAZb;AAaE,IAAA,KAAK,EAAE0B,IAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CAhDD,CADN;AAsED,CAjIuB,CAAxB;AAmIA,OAAO,IAAM0D,UAAU,GAAG,SAAbA,UAAa,QAAwB;AAAA,MAAtBxC,KAAsB,SAAtBA,KAAsB;AAAA,MAAhB1B,UAAgB,SAAhBA,UAAgB;AAGhD,MAAMH,MAAM,GAAGF,cAAc,EAA7B;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,QAAD;AACA,IAAA,qBAAqB,EAAE,KADvB;AAEA,IAAA,KAAK,EAAE;AAAC4C,MAAAA,IAAI,EAAC;AAAN,KAFP;AAGC,IAAA,YAAY,EAAE,sBAACjD,IAAD;AAAA,aAAQA,IAAI,CAAC0B,EAAL,CAAQwB,QAAR,EAAR;AAAA,KAHf;AAIA,IAAA,IAAI,EAAIrC,SAJR;AAKA,IAAA,UAAU,EAAI,oBAACb,IAAD,EAAU;AACvB,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAsB,QAAA,MAAM,EAAEO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAPA;AAQD,IAAA,UAAU,EAAE,CARX;AASD,IAAA,YAAY,EAAE,wBAAI,CAEf,CAXF;AAaA,IAAA,qBAAqB,EAAE,GAbvB;AAcA,IAAA,mBAAmB,EAAE,oBAAC,eAAD;AAAiB,MAAA,KAAK,oBAAM6B,KAAN,CAAtB;AAAoC,MAAA,UAAU,EAAE1B,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,EAkBC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACoB,MAAAA,cAAc,EAAC,UAAhB;AAA2B2C,MAAAA,MAAM,EAAC;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,oBAAD;AACC,IAAA,QAAQ,EAAEI,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,gBAAD;AACA,IAAA,OAAO,EAAG,mBAAI;AACX,UAAId,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACD,UAAGrD,SAAS,CAACU,MAAV,IAAoB,EAAvB,EAA0BwC,KAAK,CAACf,KAAN,CAAY,EAAZ,EAAe,wCAAf,EAA1B,KACI;AACJnC,QAAAA,SAAS,CAACsD,IAAV,CAAe;AAACzC,UAAAA,EAAE,EAACsC,KAAJ;AAAU9C,UAAAA,IAAI,EAAC,EAAf;AAAkBa,UAAAA,MAAM,EAAC;AAAzB,SAAf;AAECxB,QAAAA,MAAM;AACN;AACA,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,KAAK,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CAFF,CADG,CAlBD,CADF;AAuCD,CA3CM;AA+CP,IAAMwE,QAAQ,GAAGtJ,KAAK,CAACuE,IAAN,CAAW,iBAAkB;AAAA,MAAhBA,IAAgB,SAAhBA,IAAgB;AAAA,MAAXyC,MAAW,SAAXA,MAAW;;AAAA,oBAGhB/G,QAAQ,CAACsE,IAAI,CAACI,IAAL,CAAU2B,MAAX,CAHQ;AAAA;AAAA,MAGrCA,MAHqC;AAAA,MAG7BiD,SAH6B;;AAAA,oBAIpBtJ,QAAQ,CAACsE,IAAI,CAACI,IAAL,CAAUc,IAAX,CAJY;AAAA;AAAA,MAIrCA,IAJqC;AAAA,MAI/BwC,OAJ+B;;AAO5C,SAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC9B,MAAAA,aAAa,EAAC,KAAf;AAAqBC,MAAAA,SAAS,EAAC,EAA/B;AAAkC0C,MAAAA,gBAAgB,EAAC;AAAnD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC3C,MAAAA,aAAa,EAAC,KAAf;AAAqBqB,MAAAA,IAAI,EAAC,CAA1B;AAA4BnB,MAAAA,cAAc,EAAC;AAA3C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAI;AACzB,UAAGC,MAAH,EAAU;AAERlB,QAAAA,SAAS,CAACb,IAAI,CAACC,KAAN,CAAT,GAAyB;AAACyB,UAAAA,EAAE,EAAC1B,IAAI,CAACI,IAAL,CAAUsB,EAAd;AAAkBR,UAAAA,IAAI,EAACA,IAAvB;AAA6Ba,UAAAA,MAAM,EAAC;AAApC,SAAzB;AAEAiD,QAAAA,SAAS,CAAC,KAAD,CAAT;AAAiB,OAJnB,MAKI;AACFnE,QAAAA,SAAS,CAACb,IAAI,CAACC,KAAN,CAAT,GAAwB;AAACyB,UAAAA,EAAE,EAAC1B,IAAI,CAACI,IAAL,CAAUsB,EAAd;AAAkBR,UAAAA,IAAI,EAACA,IAAvB;AAA6Ba,UAAAA,MAAM,EAAC;AAApC,SAAxB;AAEAiD,QAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB;AAAC,KATzB;AAUI,IAAA,KAAK,EAAE;AAAC/B,MAAAA,IAAI,EAAC;AAAN,KAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYClB,MAAM,GACP,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,cAAd;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAuC,IAAA,KAAK,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGP,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAE,EAA5B;AAAgC,IAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfA,CADA,EAmBA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACkB,MAAAA,IAAI,EAAC;AAAN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACClB,MAAM,GAEP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACE,MAAAA,kBAAkB,EAAC,cAApB;AAAmCC,MAAAA,KAAK,EAAG,MAA3C;AAAkDZ,MAAAA,QAAQ,EAAC,EAA3D;AAA+DU,MAAAA,KAAK,EAAC;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Fd,IAA5F,CAFO,GAIP,oBAAC,SAAD;AACA,IAAA,KAAK,EAAE;AAACI,MAAAA,QAAQ,EAAC;AAAV,KADP;AAEA,IAAA,WAAW,EAAC,oDAFZ;AAGA,IAAA,SAAS,MAHT;AAIA,IAAA,aAAa,EAAE,KAJf;AAKA,IAAA,YAAY,EAAE,IALd;AAMA,IAAA,KAAK,EAAEJ,IANP;AAQA,IAAA,mBAAmB,EAAC,MARpB;AASA,IAAA,qBAAqB,EAAE,KATvB;AAWA,IAAA,YAAY,EAAE,sBAACyD,GAAD,EAAO;AAEnB9D,MAAAA,SAAS,CAACb,IAAI,CAACC,KAAN,CAAT,GAAsB;AAACyB,QAAAA,EAAE,EAAC1B,IAAI,CAACI,IAAL,CAAUsB,EAAd;AAAkBR,QAAAA,IAAI,EAACyD,GAAvB;AAA4B5C,QAAAA,MAAM,EAACA;AAAnC,OAAtB;AACA2B,MAAAA,OAAO,CAACiB,GAAD,CAAP;AACD,KAfD;AAgBA,IAAA,SAAS,EAAElF,QAhBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CAnBA,CADA,EA8CA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACuC,MAAAA,KAAK,EAAC;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,MAAM,GACN,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAI;AAC9BlB,MAAAA,SAAS,CAACyD,MAAV,CAAiBtE,IAAI,CAACC,KAAtB,EAA4B,CAA5B;AAEAwC,MAAAA,MAAM;AACJ,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADM,GAUL,IAXF,CA9CA,CAFA;AAkED,CAzEgB,EAyEf9C,QAzEe,CAAjB;AA4EA,IAAMgB,MAAM,GAAGsE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTlC,IAAAA,IAAI,EAAE,CADG;AAETrB,IAAAA,aAAa,EAAE,KAFN;AAGTwD,IAAAA,QAAQ,EAAE,MAHD;AAITC,IAAAA,UAAU,EAAE;AAJH,GADoB;AAO/BjF,EAAAA,IAAI,EAAE;AACJ4B,IAAAA,KAAK,EAAE;AADH,GAPyB;AAU/BpB,EAAAA,IAAI,EAAE;AACJ0E,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJd,IAAAA,MAAM,EAAE,CAHJ;AAIJtB,IAAAA,WAAW,EAAE,CAJT;AAKJqC,IAAAA,WAAW,EAAE,SALT;AAMJC,IAAAA,YAAY,EAAE,CANV;AAOJC,IAAAA,SAAS,EAAE,QAPP;AAQJ5D,IAAAA,cAAc,EAAE;AARZ;AAVyB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useContext,useRef, useCallback,Fragment, useReducer } from 'react';\r\nimport { AppRegistry } from 'react-native';\r\nimport { StyleSheet, Text, View, Button,ScrollView,TouchableOpacity, Image,\r\n  RefreshControl,TextInput,Alert,FlatList,KeyboardAvoidingView,Dimensions,Platform } from 'react-native';\r\nimport {colors, Header} from 'react-native-elements';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, useQuery,useLazyQuery , createHttpLink, useMutation} from \"@apollo/client\";\r\nimport Modal from 'react-native-modal'\r\n\r\nimport { GET_CONTINENTS, GET_CONTINENT, SEE_REGIST_LECTURE, GET_USERID } from \"../queries\";\r\nimport { Appbar } from 'react-native-paper';\r\nimport { createNavigatorFactory, NavigationContainer, useNavigationBuilder } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator,HeaderBackButton } from '@react-navigation/stack';\r\n\r\nimport { Ionicons, FontAwesome, AntDesign,Entypo,Feather,MaterialCommunityIcons  } from '@expo/vector-icons';\r\nimport { AuthContext, UserContext,IdContext, MemoContext } from '../components/context';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n \r\nimport HomeScreen from './HomeScreen'; \r\nimport ScheduleScreen from './ScheduleScreen';\r\nimport {SEE_ALL_POSTERS,POST_VIEW,POST_UPLOAD,POST_DELETE,POST_LOAD,COMMENT_UPLOAD,COMMENT_DELETE,POST_INFO}from '../queries'\r\nimport { valueFromAST } from 'graphql';\r\nimport { KeyboardAwareScrollView, KeyboardAwareFlatList } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport { ScreenStackHeaderLeftView } from 'react-native-screens';\r\nimport HyperlinkedText from 'react-native-hyperlinked-text'\r\n//import { FlatList } from 'react-native-gesture-handler';\r\nimport Menu, {MenuItem, MenuDivider} from 'react-native-material-menu';\r\nimport { setStatusBarNetworkActivityIndicatorVisible } from 'expo-status-bar';\r\nimport { set } from 'react-native-reanimated';\r\n\r\nimport { useIsFocused } from '@react-navigation/native'\r\n\r\nvar KeepData = null;\r\n\r\n \r\n  \r\n//var templist = []\r\nconst titleLen = 100;\r\nconst textLen = 1000;\r\nconst checkLen = 500;\r\nconst realMemoLen = 0;\r\nconst areEqual = (prevProps, nextProps) => {\r\n  console.log(\"areequal!!!!!!!!!!!!!!!!1\",nextProps.memo.index)\r\n  return (JSON.stringify(prevProps.memo.item) === JSON.stringify(nextProps.memo.item)\r\n  &&\r\n  prevProps.memo.index === nextProps.memo.index\r\n  );\r\n \r\n}   \r\n \r\n\r\nfunction useForceUpdate() {\r\n  const [, setTick] = useState(0);\r\n  const update = useCallback(() => {\r\n    setTick(tick => tick + 1);\r\n  }, [])\r\n  return update;\r\n}\r\n\r\nconst MemoPrint = React.memo(({memo,navigation}) =>{\r\n  //console.log(\"memoprint실행\",memo.item.id)\r\n // var short;\r\n  \r\n\r\n   \r\nreturn( \r\n\r\n<TouchableOpacity  \r\n  style={styles.card}\r\n  onPress= {()=>{\r\n    checklist=memo.item.checklist.slice(); \r\n\r\n    //templist = memo.item.checklist.slice();//\r\n\r\n    //console.log(\"????\",checklist);   \r\n    navigation.navigate(\"keepUpload\",{mode:memo.index,\r\n    initText:memo.item.text, initTitle:memo.item.title, initButton : false\r\n    \r\n  })\r\n  }}\r\n   >\r\n \r\n    <Text numberOfLines={2} style={{fontSize:23}}>{memo.item.title}</Text>\r\n    <Text numberOfLines={3} style={{fontSize:17}}>{memo.item.text}</Text>\r\n        {memo.item.checklist.length > 6?\r\n        <View >\r\n          {memo.item.checklist.slice(0,6).map((check)=><CheckPrint memo={check} key={check.id}/>)}\r\n          <Text>...</Text>\r\n        </View>\r\n        :\r\n        <View>\r\n        {memo.item.checklist.map((check)=><CheckPrint memo={check} key={check.id}/>)}\r\n        </View>\r\n        }\r\n    </TouchableOpacity> \r\n\r\n);\r\n},areEqual);\r\n  \r\n\r\n\r\nconst CheckPrint = React.memo(({memo})=>{\r\n  console.log(\"checkPrint!!!!!!!!!1\",memo)\r\n  return ( \r\n \r\n    \r\n    <View style={{flexDirection:'row', marginTop:10,justifyContent:'space-between'}}> \r\n \r\n\r\n        {memo.toggle ? \r\n        <Fragment >\r\n        <Feather style={{width:'7%'}}  name=\"check-circle\" size={17} color=\"gray\" />\r\n        <Text style={{textDecorationLine:'line-through',width:'93%',fontSize:17,color:'gray'}}  numberOfLines={2} >{memo.text}</Text> \r\n        </Fragment>\r\n        : \r\n        <Fragment>\r\n        <Entypo style={{width:'7%'}} name=\"circle\" size={17} color=\"black\" />\r\n        <Text style={{width:'93%',fontSize:17, color:'black'}} numberOfLines={2}>{memo.text}</Text>\r\n        </Fragment>\r\n        }\r\n  \r\n        \r\n    </View>\r\n\r\n  ) \r\n\r\n})\r\n  \r\nexport const KeepScreen = ({route,navigation})=>{\r\n  const update = useForceUpdate();\r\n  //console.log(\"keepscreen!!!!!!\",refresh)\r\n /* console.log(\"Keepscreen\", route)\r\n  const userInfo = React.useContext(UserContext);\r\n  const client = new ApolloClient({\r\n    uri: \"http://52.251.50.212:4000/\",\r\n    cache: new InMemoryCache(),\r\n    headers: { \r\n       Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n  })*/\r\n\r\n  //const isFocused = useIsFocused();\r\n\r\n  useEffect(()=>{\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      update();\r\n    });\r\n    return unsubscribe;\r\n  },[navigation])\r\n\r\n\r\n  return(\r\n  <KeepContent navigation={navigation} reload={update}/> \r\n   );\r\n\r\n} \r\n   \r\nvar refresh = false;\r\nexport const KeepContent = ({reload,navigation}) => {\r\n  const update = useForceUpdate();\r\n // console.log(\"KeepContent!!1:\")\r\n  //console.log(KeepData)\r\n  \r\n  const writeData = useCallback (async () =>{ //데이터 쓰기\r\n      //console.log(\"write data!!!!!!!!!!\")\r\n\r\n    try {\r\n      await AsyncStorage.setItem('MEMO', JSON.stringify(KeepData));\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  });\r\n\r\n \r\n  const readData = useCallback(async () => {\r\n    try { \r\n      const userMemo = await AsyncStorage.getItem(\"MEMO\")\r\n  \r\n      if (userMemo !== null) {\r\n       //console.log(\"저장소에 먼가 있음\")\r\n        KeepData = JSON.parse(userMemo)\r\n        //realMemoLen = KeepData.length;\r\n        update();\r\n      }\r\n      else{\r\n        //console.log(\"저장소에 먼가 없음\")\r\n        KeepData = [];\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      alert('Failed to fetch the data from storage') \r\n    }\r\n  });\r\n\r\n \r\n  useEffect(()=>{\r\n   // console.log(\"useffect실행!!\")\r\n    if(KeepData == null){\r\n      //console.log(\"야되냐?\")\r\n      readData();\r\n    \r\n    } \r\n    else{\r\n      if(refresh){\r\n        refresh = false;\r\n        writeData();\r\n      }\r\n      update(); \r\n    }\r\n  },[refresh]);\r\n   \r\n   \r\n\r\n  //console.log(\"HERE WE GO\",storeMemo);\r\n  return ( \r\n    <View style={{flex:1}} >\r\n      { KeepData == null?\r\n      (null)\r\n      :  \r\n      <FlatList \r\n        data = {KeepData}\r\n        keyExtractor={(memo)=>memo.id.toString()}\r\n        renderItem = {(memo) => {\r\n\r\n          return <MemoPrint memo={memo} navigation={navigation}/>\r\n        }}\r\n        windowSize={2}\r\n        onEndReached={()=>{//console.log(\"끝!!\");\r\n\r\n        }}\r\n\r\n       onEndReachedThreshold={0.1}\r\n      />     \r\n      }\r\n      <View style={{borderWidth:1,position:'absolute',bottom:10,alignSelf:'center'}}>\r\n        <Button title=\"체크리스트 추가\" onPress={()=>{\r\n          checklist=[]\r\n          //templist =[]\r\n          navigation.navigate(\"keepUpload\",{mode:\"write\", initText:\"\", initTitle:\"\",initButton : false})}}/>\r\n        </View> \r\n    </View> \r\n  );\r\n}\r\n \r\n\r\n\r\nvar checklist = []\r\n\r\n\r\n\r\nconst HeaderComponent = React.memo(({route, navigation}) =>{\r\n\r\n  const [title,setTitle] = useState(route.params.initTitle);\r\n  const [text, setText] = useState(route.params.initText);\r\n  const [preventUp, setPreventUp] = useState(route.params.initButton); //일단 업로드만실험해볼것.\r\n  const [preventDel, setPreventDel] = useState(route.params.initButton);\r\n  const update = useForceUpdate();\r\n  ///console.log(\"prevent!!!\",prevent)\r\n\r\n  React.useEffect(()=>{\r\n   // console.log(\"upload useeffect!!\")\r\n    if(preventUp){\r\n      if((KeepData.length) >= 100) Alert.alert(\"\",\"메모가 너무 많습니다. 더 이상 메모를 만들 수 없습니다.\")\r\n      else{\r\n        if(route.params.mode == \"write\"){\r\n          var today = new Date().getTime();\r\n          KeepData.push({id:today, title:title, text:text, checklist : checklist});\r\n          //realMemoLen +=1;\r\n\r\n        }  \r\n        else{\r\n         // console.log(\"변경중...\")\r\n         // console.log(\"befor\",KeepData[route.params.mode])\r\n\r\n          var tempid= KeepData[route.params.mode].id \r\n          //KeepData[route.params.mode].title = title;\r\n          //KeepData[route.params.mode].text = text;\r\n          //KeepData[route.params.mode].checklist = checklist;\r\n          //var tempcheck=JSON.stringify(checklist)\r\n          KeepData[route.params.mode] ={id:tempid, title:title, text: text, checklist:checklist.slice()}\r\n         // console.log(\"after\",KeepData[route.params.mode])\r\n          }\r\n      }  \r\n      checklist = [];\r\n      //templist = [];\r\n    // route.params.keep({refresh:true})\r\n      refresh = true;\r\n   \r\n      navigation.goBack();\r\n    }\r\n \r\n    if(preventDel){\r\n      //console.log(\"삭제전\", KeepData.length);\r\n      //console.log(route.params.mode)\r\n      //var tempid = KeepData[route.params.mode].id\r\n      //KeepData[route.params.mode]={id:tempid, delete: true}\r\n      //realMemoLen -= 1;\r\n      KeepData.splice(route.params.mode,1)\r\n      checklist=[];\r\n      //templist =[];\r\n      //route.params.keep({refresh:true})\r\n      refresh = true;\r\n     // console.log(\"삭제후\", KeepData.length)\r\n      navigation.goBack(); \r\n\r\n    }\r\n  },[preventUp,preventDel])\r\n\r\n\r\n  return(\r\n        <Fragment>\r\n        <View style={{flex:1 ,marginTop:40, marginHorizontal:10 ,flexDirection:'row',justifyContent:'space-between'}}>\r\n          <View style = {{flexDirection: 'row'}}>\r\n          <TouchableOpacity  style={{alignSelf:'center'}}\r\n          onPress= {()=>{ \r\n            checklist = [];\r\n            //templist = [];\r\n            //console.log(\"뒤로가기 ㅜㄴ럴ㅆ다고\", checklist)\r\n           // route.params.keep({refresh:false})\r\n             navigation.goBack()}}\r\n           > \r\n             <AntDesign name=\"closecircle\" size={30} color=\"dodgerblue\" />\r\n           </TouchableOpacity>\r\n        <Text style={{fontSize:25, marginLeft:10}}>체크리스트 추가</Text>\r\n        </View> \r\n          <View style={{flexDirection:'row'}}>\r\n          { route.params.mode != \"write\"?\r\n          <View style={{marginHorizontal:10}}>\r\n          <Button \r\n          title=\"삭제\"\r\n          disabled ={preventDel}\r\n          onPress={() =>{\r\n            if(!preventDel) setPreventDel(true)\r\n          }} />\r\n          </View> \r\n          : \r\n          (null)\r\n          }\r\n          <Button title=\"저장\"  \r\n          disabled={preventUp}\r\n          onPress={() =>{ //checklist추가예정.\r\n            if(!preventUp) setPreventUp(true)  \r\n          }} />\r\n          </View>\r\n        </View > \r\n        <View style={{margin:10}}>\r\n        <TextInput \r\n              style={{\r\n                textAlignVertical: \"top\",\r\n                fontSize : 20\r\n              }}\r\n          placeholder=\"제목\"\r\n          autoCapitalize=\"none\"\r\n          onChangeText={(val)=>setTitle(val)}\r\n          value={title}\r\n          maxLength={titleLen}\r\n           />\r\n         </View>  \r\n         <View style={{marginHorizontal:10, marginTop:10}}>\r\n        <TextInput \r\n              style={{\r\n                textAlignVertical: \"top\",\r\n                fontSize : 20\r\n              }}\r\n          placeholder=\"내용\"\r\n          autoCapitalize=\"none\"\r\n          onChangeText={(val)=>setText(val)}\r\n          multiline={true}\r\n          scrollEnabled={false}\r\n          blurOnSubmit={true}\r\n          numberOfLines={2}\r\n          maxLength={textLen}\r\n          value={text}\r\n           />\r\n        </View> \r\n        </Fragment>\r\n\r\n  )\r\n\r\n});\r\n\r\nexport const KeepUpload = ({route,navigation}) => {\r\n  //console.log(\"KeepUpload!!!!\",route.params.mode);\r\n  //console.log(checklist)\r\n  const update = useForceUpdate();\r\n  return( \r\n    <Fragment>\r\n   <FlatList\r\n   removeClippedSubviews={false} \r\n   style={{flex:1}}\r\n    keyExtractor={(memo)=>memo.id.toString()}\r\n   data = {checklist}\r\n   renderItem = {(memo) => {\r\n    return <ListItem memo={memo} reload={update}/>\r\n  }}\r\n  windowSize={2}\r\n  onEndReached={()=>{//console.log(\"끝!!\");\r\n\r\n    }}\r\n \r\n   onEndReachedThreshold={0.1}\r\n   ListHeaderComponent={<HeaderComponent route={{...route}} navigation={navigation}/>}\r\n\r\n   />\r\n     <View style={{justifyContent:'flex-end',margin:10}}>\r\n  <KeyboardAvoidingView \r\n   behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\r\n    <TouchableOpacity  \r\n    onPress= {()=>{\r\n       var today = new Date().getTime();\r\n      if(checklist.length >= 50)Alert.alert(\"\",\"체크리스트가 너무 많습니다. 더 이상 체크리스트를 만들 수 없습니다.\")\r\n      else{\r\n      checklist.push({id:today,text:\"\",toggle:false}) \r\n      //templist.push({id:today,text:\"\",toggle:false})\r\n       update();\r\n      }\r\n      }}\r\n     >\r\n       <AntDesign name=\"plussquareo\" size={30} color=\"black\" />\r\n     </TouchableOpacity>\r\n  </KeyboardAvoidingView>\r\n  </View> \r\n  </Fragment>\r\n  );\r\n}\r\n   \r\n\r\n\r\nconst ListItem = React.memo(({memo,reload}) =>{ //나중에 매개변수받아야함.\r\n  //console.log(\"ListItem\", memo.index)\r\n  //console.log(checklist)\r\n  const [toggle, setToggle] = useState(memo.item.toggle) \r\n  const [text, setText] = useState(memo.item.text)\r\n\r\n   \r\n  return(\r\n\r\n  <View style={{flexDirection:'row',marginTop:15,marginHorizontal:10}}> \r\n  <View style={{flexDirection:'row',flex:1,justifyContent:'space-between'}}>\r\n  <TouchableOpacity onPress={()=>{ \r\n        if(toggle){\r\n\r\n          checklist[memo.index]  = {id:memo.item.id, text:text, toggle:false};\r\n          //[index]  = {id:checklist[index].id, text:checklist[index].text, toggle:false}\r\n          setToggle(false)}\r\n        else{\r\n          checklist[memo.index] = {id:memo.item.id, text:text, toggle:true};\r\n          //templist[index]= {id:checklist[index].id, text:checklist[index].text, toggle:false}\r\n          setToggle(true)}}}\r\n      style={{flex:0.1}}\r\n          >\r\n  {toggle ?\r\n  <Feather name=\"check-circle\" size={24} color=\"gray\" />\r\n  :\r\n  <Entypo name=\"circle\" size={24} color=\"black\" />\r\n  } \r\n  </TouchableOpacity>\r\n  <View style={{flex:1}}>\r\n  {toggle ? \r\n  \r\n  <Text style={{textDecorationLine:'line-through',color : 'gray',fontSize:20, width:'90%' }}>{text}</Text>\r\n  : \r\n  <TextInput \r\n  style={{fontSize:20}}\r\n  placeholder=\"내용을 입력하세요.\"\r\n  multiline\r\n  scrollEnabled={false}\r\n  blurOnSubmit={true}\r\n  value={text} \r\n\r\n  keyboardDismissMode='none'\r\n  removeClippedSubviews={false}\r\n\r\n  onChangeText={(val)=>{\r\n    //templist[index].text = val;\r\n    checklist[memo.index]={id:memo.item.id, text:val, toggle:toggle}\r\n    setText(val)\r\n  }}\r\n  maxLength={checkLen}\r\n  /> \r\n  }   \r\n  </View> \r\n  </View>\r\n  <View style={{width:'7%'}} >\r\n  {toggle ?\r\n   <TouchableOpacity onPress={()=>{\r\n    checklist.splice(memo.index,1);\r\n    //templist.splice(index,1);\r\n    reload();\r\n     }}\r\n     >\r\n    <AntDesign name=\"close\" size={24} color=\"black\" />\r\n   </TouchableOpacity> \r\n   :\r\n   (null)\r\n  }\r\n  </View>\r\n  </View>\r\n\r\n  );\r\n  \r\n},areEqual)\r\n\r\n  \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'flex-start' // if you want to fill rows left to right\r\n  },\r\n  item: { \r\n    width: '50%', // is 50% of container width \r\n  },\r\n  card: { \r\n    backgroundColor: \"white\",\r\n    padding: 10, \r\n    margin: 1,\r\n    borderWidth: 1, \r\n    borderColor: \"#dcdcdc\",\r\n    borderRadius: 5,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}