{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\heejun\\\\test0220\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport MainScreen from \"./screens/MainScreen\";\nimport RootStackScreen from \"./screens/RootStackScreen\";\nimport { AuthContext, UserContext } from \"./components/context\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport * as Notifications from 'expo-notifications';\nimport { ApolloClient, ApolloProvider, InMemoryCache, useMutation, useQuery, useLazyQuery, createHttpLink } from \"@apollo/client\";\nimport { LOGIN } from \"./queries\";\nvar client = new ApolloClient({\n  uri: \"http://52.251.50.212:4000/\",\n  cache: new InMemoryCache()\n});\n\nfunction Sub() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userEmail = _React$useState2[0],\n      setUserEmail = _React$useState2[1];\n\n  var _useMutation = useMutation(LOGIN),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      loginMutation = _useMutation2[0];\n\n  var initialLoginState = {\n    isLoading: true,\n    email: null,\n    token: null,\n    lastNotif: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: action.email,\n          token: action.token,\n          lastNotif: action.lastNotif,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: action.id,\n          token: action.token,\n          lastNotif: action.lastNotif,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: null,\n          token: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: action.id,\n          token: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(email, password) {\n        var token, data, lastNotif, notif_switch;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(loginMutation({\n                  variables: {\n                    email: email,\n                    password: password\n                  }\n                }));\n\n              case 3:\n                data = _context.sent;\n                console.log(data.data.login);\n                token = data.data.login;\n\n                if (!token) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.prev = 7;\n                _context.next = 10;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', token));\n\n              case 10:\n                _context.next = 12;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userEmail', email));\n\n              case 12:\n                AsyncStorage.getItem(\"notif_switch\", function (err, res) {\n                  console.log(\"notif_switch res:\", res);\n\n                  if (res) {\n                    if (res == \"ON\") {\n                      AsyncStorage.setItem(\"notified\", \"NO\");\n                    } else {\n                      AsyncStorage.setItem(\"notified\", \"YES\");\n                    }\n                  } else {\n                    AsyncStorage.setItem(\"notif_switch\", \"ON\");\n                    AsyncStorage.setItem(\"notified\", \"NO\");\n                  }\n                });\n                _context.next = 15;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('lastNotif'));\n\n              case 15:\n                lastNotif = _context.sent;\n                _context.next = 21;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](7);\n                console.log(_context.t0);\n\n              case 21:\n                console.log('user: ', email);\n                console.log('pass: ', password);\n                console.log('jwt: ', token);\n                console.log('lastNotif: ', lastNotif);\n                setUserEmail(email);\n                dispatch({\n                  type: \"LOGIN\",\n                  id: email,\n                  token: token,\n                  lastNotif: lastNotif\n                });\n                _context.next = 33;\n                break;\n\n              case 29:\n                _context.prev = 29;\n                _context.t1 = _context[\"catch\"](0);\n                console.log(_context.t1);\n                Alert.alert(\"아이디 또는 비밀번호를 확인하세요\");\n\n              case 33:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 29], [7, 18]], Promise);\n      },\n      signOut: function signOut() {\n        var tmp;\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"sign out\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('userEmail'));\n\n              case 4:\n                tmp = _context2.sent;\n                console.log(tmp);\n                _context2.next = 8;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('token'));\n\n              case 8:\n                _context2.next = 10;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userEmail'));\n\n              case 10:\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 15:\n                dispatch({\n                  type: \"LOGOUT\"\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[1, 12]], Promise);\n      },\n      signUp: function signUp() {}\n    };\n  });\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var token, userEmail, lastNotif, notif_switch;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              token = null;\n              userEmail = null;\n              _context3.prev = 2;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n            case 5:\n              token = _context3.sent;\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userEmail'));\n\n            case 8:\n              userEmail = _context3.sent;\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('lastNotif'));\n\n            case 11:\n              lastNotif = _context3.sent;\n              _context3.next = 14;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('notif_switch'));\n\n            case 14:\n              notif_switch = _context3.sent;\n              console.log(\"notif_switch:\", notif_switch);\n\n              if (!notif_switch) {\n                _context3.next = 26;\n                break;\n              }\n\n              if (!(notif_switch == \"ON\")) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 20;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('notified', \"NO\"));\n\n            case 20:\n              _context3.next = 24;\n              break;\n\n            case 22:\n              _context3.next = 24;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('notified', \"YES\"));\n\n            case 24:\n              _context3.next = 28;\n              break;\n\n            case 26:\n              _context3.next = 28;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('notified', \"NO\"));\n\n            case 28:\n              _context3.next = 33;\n              break;\n\n            case 30:\n              _context3.prev = 30;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.log(_context3.t0);\n\n            case 33:\n              console.log('token: ', token);\n              console.log('userEmail: ', userEmail);\n              console.log('lastNotif:', lastNotif);\n              setUserEmail(userEmail);\n              dispatch({\n                type: \"RETRIEVE_TOKEN\",\n                token: token,\n                email: userEmail,\n                lastNotif: lastNotif\n              });\n\n            case 38:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[2, 30]], Promise);\n    }, 3000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, React.createElement(UserContext.Provider, {\n    value: loginState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, loginState.token !== null && loginState.email !== null ? React.createElement(MainScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }) : React.createElement(RootStackScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default function App() {\n  Notifications.setNotificationHandler({\n    handleNotification: function handleNotification() {\n      return _regeneratorRuntime.async(function handleNotification$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", {\n                shouldShowAlert: true,\n                shouldPlaySound: true,\n                shouldSetBadge: false\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  });\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, React.createElement(Sub, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  adButton: {\n    alignItems: 'center',\n    justifyContent: \"center\",\n    marginVertical: 10,\n    marginHorizontal: 50,\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: \"red\",\n    borderColor: \"white\"\n  },\n  adcard: {\n    marginVertical: 5,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/heejun/test0220/App.js"],"names":["React","useEffect","NavigationContainer","MainScreen","RootStackScreen","AuthContext","UserContext","AsyncStorage","Notifications","ApolloClient","ApolloProvider","InMemoryCache","useMutation","useQuery","useLazyQuery","createHttpLink","LOGIN","client","uri","cache","Sub","useState","userEmail","setUserEmail","loginMutation","initialLoginState","isLoading","email","token","lastNotif","loginReducer","prevState","action","type","id","useReducer","loginState","dispatch","authContext","useMemo","signIn","password","variables","data","console","log","login","setItem","getItem","err","res","Alert","alert","signOut","tmp","removeItem","signUp","setTimeout","notif_switch","flex","justifyContent","alignItems","App","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","styles","StyleSheet","create","container","backgroundColor","adButton","marginVertical","marginHorizontal","padding","borderRadius","borderColor","adcard"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { StyleSheet, Text, View, ActivityIndicator, Alert, Modal, TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport MainScreen from './screens/MainScreen';\r\nimport RootStackScreen from './screens/RootStackScreen';\r\n\r\nimport { AuthContext, UserContext } from './components/context';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nimport * as Notifications from 'expo-notifications';\r\n\r\n// 통신 패키지 \r\nimport { ApolloClient, ApolloProvider, InMemoryCache, useMutation, useQuery, useLazyQuery, createHttpLink } from \"@apollo/client\";\r\nimport {LOGIN} from './queries';\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"http://52.251.50.212:4000/\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction Sub() {\r\n  //const [isLoading, setIsLoading] = React.useState(true);\r\n  //const [token, setUserToken] = React.useState(null);\r\n  const [userEmail, setUserEmail] = React.useState(null);\r\n  const [loginMutation] = useMutation(LOGIN);\r\n\r\n\r\n  const initialLoginState = {\r\n    isLoading: true,\r\n    email: null,\r\n    token: null,\r\n    lastNotif: null,\r\n  };\r\n\r\n  const loginReducer = (prevState, action) => {\r\n    switch (action.type){\r\n      case 'RETRIEVE_TOKEN':\r\n        return {\r\n          ...prevState,\r\n          email: action.email,\r\n          token: action.token,\r\n          lastNotif: action.lastNotif,\r\n          isLoading: false,\r\n        };    \r\n      case 'LOGIN':\r\n        return {\r\n          ...prevState,\r\n          email: action.id,\r\n          token: action.token,\r\n          lastNotif: action.lastNotif,\r\n          isLoading: false,\r\n        };  \r\n      case 'LOGOUT':\r\n        return {\r\n          ...prevState,\r\n          email: null,\r\n          token: null,\r\n          isLoading: false,\r\n        };  \r\n      case 'REGISTER':\r\n        return {\r\n          ...prevState,\r\n          email: action.id,\r\n          token: action.token,\r\n          isLoading: false,\r\n        };\r\n    }\r\n  };\r\n\r\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\r\n\r\n  const authContext = React.useMemo(() => ({\r\n    signIn: async (email, password) => {\r\n      //setUserToken('abc');\r\n      //setIsLoading(false);\r\n      let token;\r\n      let data;\r\n      let lastNotif;\r\n      let notif_switch;\r\n      try{\r\n        data = await loginMutation({\r\n          variables: {\r\n            email: email,\r\n            password: password\r\n          }\r\n        });\r\n        console.log(data.data.login);\r\n        token = data.data.login;\r\n        if (token){\r\n          try{\r\n            await AsyncStorage.setItem('token', token);\r\n            await AsyncStorage.setItem('userEmail', email);\r\n            AsyncStorage.getItem(\"notif_switch\",(err,res)=>{\r\n              console.log(\"notif_switch res:\",res);\r\n              if(res){\r\n                if(res==\"ON\"){\r\n                  AsyncStorage.setItem(\"notified\", \"NO\");\r\n                }else{ // OFF\r\n                  AsyncStorage.setItem(\"notified\", \"YES\"); // 알림을 끄면 이미 알림받은 것으로 친다.\r\n                }\r\n              }else{ // 아직 ON/OFF가 설정되지 않음 -> 기본값=ON\r\n                AsyncStorage.setItem(\"notif_switch\", \"ON\");\r\n                AsyncStorage.setItem(\"notified\", \"NO\");\r\n              }\r\n            })\r\n            /*\r\n            AsyncStorage.getItem(\"notif_switch\",(err,res)=>{\r\n              console.log(\"notif_switch res:\",res);\r\n              if(Boolean(res)){\r\n                AsyncStorage.setItem('notified', \"NO\");\r\n              }\r\n              else{\r\n                AsyncStorage.setItem('notified', \"YES\");\r\n              }\r\n            });\r\n            */\r\n            lastNotif = await AsyncStorage.getItem('lastNotif');\r\n          }catch(e){\r\n            console.log(e);\r\n          }\r\n          \r\n        }\r\n        console.log('user: ', email);\r\n        console.log('pass: ', password);\r\n        console.log('jwt: ', token);\r\n        console.log('lastNotif: ', lastNotif);\r\n        setUserEmail(email);\r\n        dispatch({ type: \"LOGIN\", id: email, token: token, lastNotif: lastNotif});\r\n      }catch(e){\r\n        console.log(e);\r\n        Alert.alert(\"아이디 또는 비밀번호를 확인하세요\");\r\n      }\r\n\r\n    },\r\n    signOut: async () => {\r\n      console.log(\"sign out\");\r\n      //setUserToken(null);\r\n      //setIsLoading(false);\r\n      try{\r\n        let tmp = await AsyncStorage.getItem('userEmail');\r\n        console.log(tmp);\r\n        await AsyncStorage.removeItem('token');\r\n        await AsyncStorage.removeItem('userEmail');\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n      dispatch({ type: \"LOGOUT\" });\r\n\r\n    },\r\n    signUp: () => {\r\n      //setUserToken('abc');\r\n      //setIsLoading(false);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setTimeout(async () => {\r\n      let token;\r\n      let userEmail;\r\n      let lastNotif;\r\n      let notif_switch;\r\n      token = null;\r\n      userEmail = null;\r\n      try{\r\n        token = await AsyncStorage.getItem('token');\r\n        userEmail = await AsyncStorage.getItem('userEmail');\r\n        lastNotif = await AsyncStorage.getItem('lastNotif');\r\n        notif_switch = await AsyncStorage.getItem('notif_switch');\r\n        console.log(\"notif_switch:\",notif_switch);\r\n        if(notif_switch){\r\n          if(notif_switch==\"ON\"){\r\n            await AsyncStorage.setItem('notified', \"NO\");\r\n          }\r\n          else{ // notif_switch==\"OFF\"\r\n            await AsyncStorage.setItem('notified', \"YES\");\r\n          }\r\n        }else{\r\n          await AsyncStorage.setItem('notified', \"NO\");\r\n        }\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n      console.log('token: ', token);\r\n      console.log('userEmail: ', userEmail);\r\n      console.log('lastNotif:', lastNotif);\r\n      setUserEmail(userEmail);\r\n      dispatch({ type: \"RETRIEVE_TOKEN\", token: token, email: userEmail, lastNotif: lastNotif});\r\n    }, 3000);\r\n  }, []);\r\n\r\n  if (loginState.isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      <UserContext.Provider value={loginState}>\r\n        <NavigationContainer>\r\n          {loginState.token !== null && loginState.email !== null? (\r\n            <MainScreen />            \r\n          ):(\r\n            <RootStackScreen />\r\n          )}\r\n\r\n        </NavigationContainer>\r\n        </UserContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default function App(){\r\n  //AsyncStorage.clear();\r\n  Notifications.setNotificationHandler({\r\n    handleNotification: async () => ({\r\n      shouldShowAlert: true,\r\n      shouldPlaySound: true,\r\n      shouldSetBadge: false,\r\n    }),\r\n  });\r\n  \r\n  // Second, call the method\r\n  /*\r\n  Notifications.scheduleNotificationAsync({\r\n    content: {\r\n      title: 'Look at that notification',\r\n      body: \"I'm so proud of myself!\",\r\n    },\r\n    trigger: null,\r\n  });*/\r\n  return(\r\n    <ApolloProvider client={client}>\r\n      <Sub />\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  adButton: {\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    marginVertical: 10,\r\n    marginHorizontal: 50,\r\n    //borderStyle:\"dashed\", \r\n    //borderWidth:1,\r\n    padding:10,\r\n    borderRadius: 10,\r\n    backgroundColor: \"red\",\r\n    borderColor: \"white\"\r\n  },\r\n  adcard:{\r\n    marginVertical: 5,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}